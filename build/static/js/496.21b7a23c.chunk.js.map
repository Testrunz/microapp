{"version":3,"file":"static/js/496.21b7a23c.chunk.js","mappings":"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I,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,GAAK,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,EAAI,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,GAAG,EAAE,EAAI,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,GAAG,EAAE,EAAI,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,GAAG,EAAE,EAAI,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,GAAG,EAAE,EAAI,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,GAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAI,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,EAAI,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,IAAI,GAAG,EAAI,GAAG,GAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAA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","sources":["../node_modules/mermaid/src/diagrams/requirement/parser/requirementDiagram.jison","../node_modules/mermaid/src/diagrams/requirement/requirementDb.js","../node_modules/mermaid/src/diagrams/requirement/requirementMarkers.js","../node_modules/mermaid/src/diagrams/requirement/requirementRenderer.js","../node_modules/mermaid/src/diagrams/requirement/requirementDiagram.ts","../node_modules/mermaid/src/diagrams/requirement/styles.js"],"sourcesContent":["/** mermaid\n *  https://knsv.github.io/mermaid\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n%options case-insensitive\n\n%x string\n%x token\n%x unqString\n%x open_directive\n%x type_directive\n%x arg_directive\n%x close_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\n\"title\"\\s[^#\\n;]+       return 'title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n(\\r?\\n)+                               return 'NEWLINE';\n\\s+                                    /* skip all whitespace */\n\\#[^\\n]*                               /* skip comments */\n\\%%[^\\n]*                              /* skip comments */\n<<EOF>>                               return 'EOF';\n\n\"requirementDiagram\"        return 'RD';\n\n\"{\"                         return 'STRUCT_START';\n\"}\"                         return 'STRUCT_STOP';\n\":\"                         return 'COLONSEP';\n\n\"id\"                        return 'ID';\n\"text\"                      return 'TEXT';\n\"risk\"                      return 'RISK';\n\"verifyMethod\"              return 'VERIFYMTHD';\n\n\"requirement\"               return 'REQUIREMENT';\n\"functionalRequirement\"     return 'FUNCTIONAL_REQUIREMENT';\n\"interfaceRequirement\"      return 'INTERFACE_REQUIREMENT';\n\"performanceRequirement\"    return 'PERFORMANCE_REQUIREMENT';\n\"physicalRequirement\"       return 'PHYSICAL_REQUIREMENT';\n\"designConstraint\"          return 'DESIGN_CONSTRAINT';\n\n\"low\"                       return 'LOW_RISK';\n\"medium\"                    return 'MED_RISK';\n\"high\"                      return 'HIGH_RISK';\n\n\"analysis\"                  return 'VERIFY_ANALYSIS';\n\"demonstration\"             return 'VERIFY_DEMONSTRATION';\n\"inspection\"                return 'VERIFY_INSPECTION';\n\"test\"                      return 'VERIFY_TEST';\n\n\"element\"       return 'ELEMENT';\n\n\"contains\"      return 'CONTAINS';\n\"copies\"        return 'COPIES';\n\"derives\"       return 'DERIVES';\n\"satisfies\"     return 'SATISFIES';\n\"verifies\"      return 'VERIFIES';\n\"refines\"       return 'REFINES';\n\"traces\"        return 'TRACES';\n\n\"type\"          return 'TYPE';\n\"docref\"        return 'DOCREF';\n\n\"<-\"        return 'END_ARROW_L';\n\"->\"        {return 'END_ARROW_R';}\n\"-\"         {return 'LINE';}\n\n[\"]                 { this.begin(\"string\"); }\n<string>[\"]         { this.popState(); }\n<string>[^\"]*       { return \"qString\"; }\n\n[\\w][^\\r\\n\\{\\<\\>\\-\\=]*                { yytext = yytext.trim(); return 'unqString';}\n\n/lex\n\n%start start\n\n%% /* language grammar */\n\nstart\n  : directive NEWLINE start\n  | directive start\n  | RD NEWLINE diagram EOF;\n\ndirective\n  : openDirective typeDirective closeDirective\n  | openDirective typeDirective ':' argDirective closeDirective\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n  ;\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); };\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); };\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); };\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'pie'); };\n\ndiagram\n  : /* empty */ { $$ = [] }\n  | requirementDef diagram\n  | elementDef diagram\n  | relationshipDef diagram\n  | directive diagram\n  | NEWLINE diagram;\n\nrequirementDef\n  : requirementType requirementName STRUCT_START NEWLINE requirementBody\n    { yy.addRequirement($2, $1) };\n\nrequirementBody\n  : ID COLONSEP id NEWLINE requirementBody\n    { yy.setNewReqId($3); }\n  | TEXT COLONSEP text NEWLINE requirementBody\n    { yy.setNewReqText($3); }\n  | RISK COLONSEP riskLevel NEWLINE requirementBody\n    { yy.setNewReqRisk($3); }\n  | VERIFYMTHD COLONSEP verifyType NEWLINE requirementBody\n    { yy.setNewReqVerifyMethod($3); }\n  | NEWLINE requirementBody\n  | STRUCT_STOP;\n\nrequirementType\n  : REQUIREMENT\n    { $$=yy.RequirementType.REQUIREMENT;}\n  | FUNCTIONAL_REQUIREMENT\n    { $$=yy.RequirementType.FUNCTIONAL_REQUIREMENT;}\n  | INTERFACE_REQUIREMENT\n    { $$=yy.RequirementType.INTERFACE_REQUIREMENT;}\n  | PERFORMANCE_REQUIREMENT\n    { $$=yy.RequirementType.PERFORMANCE_REQUIREMENT;}\n  | PHYSICAL_REQUIREMENT\n    { $$=yy.RequirementType.PHYSICAL_REQUIREMENT;}\n  | DESIGN_CONSTRAINT\n    { $$=yy.RequirementType.DESIGN_CONSTRAINT;};\n\nriskLevel\n  : LOW_RISK { $$=yy.RiskLevel.LOW_RISK;}\n  | MED_RISK { $$=yy.RiskLevel.MED_RISK;}\n  | HIGH_RISK { $$=yy.RiskLevel.HIGH_RISK;};\n\nverifyType\n  : VERIFY_ANALYSIS\n    { $$=yy.VerifyType.VERIFY_ANALYSIS;}\n  | VERIFY_DEMONSTRATION\n    { $$=yy.VerifyType.VERIFY_DEMONSTRATION;}\n  | VERIFY_INSPECTION\n    { $$=yy.VerifyType.VERIFY_INSPECTION;}\n  | VERIFY_TEST\n    { $$=yy.VerifyType.VERIFY_TEST;};\n\nelementDef\n  : ELEMENT elementName STRUCT_START NEWLINE elementBody\n    { yy.addElement($2) };\n\nelementBody\n  : TYPE COLONSEP type NEWLINE elementBody\n    { yy.setNewElementType($3); }\n  | DOCREF COLONSEP ref NEWLINE elementBody\n    { yy.setNewElementDocRef($3); }\n  | NEWLINE elementBody\n  | STRUCT_STOP;\n\nrelationshipDef\n  : id END_ARROW_L relationship LINE id\n    {  yy.addRelationship($3, $5, $1) }\n  | id LINE relationship END_ARROW_R id\n     { yy.addRelationship($3, $1, $5) };\n\nrelationship\n  : CONTAINS\n      { $$=yy.Relationships.CONTAINS;}\n  | COPIES\n      { $$=yy.Relationships.COPIES;}\n  | DERIVES\n      { $$=yy.Relationships.DERIVES;}\n  | SATISFIES\n      { $$=yy.Relationships.SATISFIES;}\n  | VERIFIES\n      { $$=yy.Relationships.VERIFIES;}\n  | REFINES\n      { $$=yy.Relationships.REFINES;}\n  | TRACES\n      { $$=yy.Relationships.TRACES;};\n\n\nrequirementName: unqString | qString;\nid : unqString | qString;\ntext : unqString | qString;\nelementName : unqString | qString;\ntype : unqString | qString;\nref : unqString | qString;\n\n%%\n","import * as configApi from '../../config';\nimport { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\n\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet relations = [];\nlet latestRequirement = {};\nlet requirements = {};\nlet latestElement = {};\nlet elements = {};\n\nconst RequirementType = {\n  REQUIREMENT: 'Requirement',\n  FUNCTIONAL_REQUIREMENT: 'Functional Requirement',\n  INTERFACE_REQUIREMENT: 'Interface Requirement',\n  PERFORMANCE_REQUIREMENT: 'Performance Requirement',\n  PHYSICAL_REQUIREMENT: 'Physical Requirement',\n  DESIGN_CONSTRAINT: 'Design Constraint',\n};\n\nconst RiskLevel = {\n  LOW_RISK: 'Low',\n  MED_RISK: 'Medium',\n  HIGH_RISK: 'High',\n};\n\nconst VerifyType = {\n  VERIFY_ANALYSIS: 'Analysis',\n  VERIFY_DEMONSTRATION: 'Demonstration',\n  VERIFY_INSPECTION: 'Inspection',\n  VERIFY_TEST: 'Test',\n};\n\nconst Relationships = {\n  CONTAINS: 'contains',\n  COPIES: 'copies',\n  DERIVES: 'derives',\n  SATISFIES: 'satisfies',\n  VERIFIES: 'verifies',\n  REFINES: 'refines',\n  TRACES: 'traces',\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addRequirement = (name, type) => {\n  if (requirements[name] === undefined) {\n    requirements[name] = {\n      name,\n      type,\n\n      id: latestRequirement.id,\n      text: latestRequirement.text,\n      risk: latestRequirement.risk,\n      verifyMethod: latestRequirement.verifyMethod,\n    };\n  }\n  latestRequirement = {};\n\n  return requirements[name];\n};\n\nconst getRequirements = () => requirements;\n\nconst setNewReqId = (id) => {\n  if (latestRequirement !== undefined) {\n    latestRequirement.id = id;\n  }\n};\n\nconst setNewReqText = (text) => {\n  if (latestRequirement !== undefined) {\n    latestRequirement.text = text;\n  }\n};\n\nconst setNewReqRisk = (risk) => {\n  if (latestRequirement !== undefined) {\n    latestRequirement.risk = risk;\n  }\n};\n\nconst setNewReqVerifyMethod = (verifyMethod) => {\n  if (latestRequirement !== undefined) {\n    latestRequirement.verifyMethod = verifyMethod;\n  }\n};\n\nconst addElement = (name) => {\n  if (elements[name] === undefined) {\n    elements[name] = {\n      name,\n\n      type: latestElement.type,\n      docRef: latestElement.docRef,\n    };\n    log.info('Added new requirement: ', name);\n  }\n  latestElement = {};\n\n  return elements[name];\n};\n\nconst getElements = () => elements;\n\nconst setNewElementType = (type) => {\n  if (latestElement !== undefined) {\n    latestElement.type = type;\n  }\n};\n\nconst setNewElementDocRef = (docRef) => {\n  if (latestElement !== undefined) {\n    latestElement.docRef = docRef;\n  }\n};\n\nconst addRelationship = (type, src, dst) => {\n  relations.push({\n    type,\n    src,\n    dst,\n  });\n};\n\nconst getRelationships = () => relations;\n\nconst clear = () => {\n  relations = [];\n  latestRequirement = {};\n  requirements = {};\n  latestElement = {};\n  elements = {};\n  commonClear();\n};\n\nexport default {\n  RequirementType,\n  RiskLevel,\n  VerifyType,\n  Relationships,\n\n  parseDirective,\n  getConfig: () => configApi.getConfig().req,\n\n  addRequirement,\n  getRequirements,\n  setNewReqId,\n  setNewReqText,\n  setNewReqRisk,\n  setNewReqVerifyMethod,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n\n  addElement,\n  getElements,\n  setNewElementType,\n  setNewElementDocRef,\n\n  addRelationship,\n  getRelationships,\n\n  clear,\n};\n","const ReqMarkers = {\n  CONTAINS: 'contains',\n  ARROW: 'arrow',\n};\n\nconst insertLineEndings = (parentNode, conf) => {\n  let containsNode = parentNode\n    .append('defs')\n    .append('marker')\n    .attr('id', ReqMarkers.CONTAINS + '_line_ending')\n    .attr('refX', 0)\n    .attr('refY', conf.line_height / 2)\n    .attr('markerWidth', conf.line_height)\n    .attr('markerHeight', conf.line_height)\n    .attr('orient', 'auto')\n    .append('g');\n\n  containsNode\n    .append('circle')\n    .attr('cx', conf.line_height / 2)\n    .attr('cy', conf.line_height / 2)\n    .attr('r', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    // .attr('stroke-width', 1)\n    .attr('fill', 'none');\n\n  containsNode\n    .append('line')\n    .attr('x1', 0)\n    .attr('x2', conf.line_height)\n    .attr('y1', conf.line_height / 2)\n    .attr('y2', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    .attr('stroke-width', 1);\n\n  containsNode\n    .append('line')\n    .attr('y1', 0)\n    .attr('y2', conf.line_height)\n    .attr('x1', conf.line_height / 2)\n    .attr('x2', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    .attr('stroke-width', 1);\n\n  parentNode\n    .append('defs')\n    .append('marker')\n    .attr('id', ReqMarkers.ARROW + '_line_ending')\n    .attr('refX', conf.line_height)\n    .attr('refY', 0.5 * conf.line_height)\n    .attr('markerWidth', conf.line_height)\n    .attr('markerHeight', conf.line_height)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr(\n      'd',\n      `M0,0\n      L${conf.line_height},${conf.line_height / 2}\n      M${conf.line_height},${conf.line_height / 2}\n      L0,${conf.line_height}`\n    )\n    .attr('stroke-width', 1);\n  // .attr('stroke', conf.rect_border_color);\n};\n\nexport default {\n  ReqMarkers,\n  insertLineEndings,\n};\n","import { line, select } from 'd3';\nimport { layout as dagreLayout } from 'dagre-d3-es/src/dagre/index.js';\nimport * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { log } from '../../logger';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport common from '../common/common';\nimport markers from './requirementMarkers';\nimport { getConfig } from '../../config';\n\nlet conf = {};\nlet relCnt = 0;\n\nconst newRectNode = (parentNode, id) => {\n  return parentNode\n    .insert('rect', '#' + id)\n    .attr('class', 'req reqBox')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', conf.rect_min_width + 'px')\n    .attr('height', conf.rect_min_height + 'px');\n};\n\nconst newTitleNode = (parentNode, id, txts) => {\n  let x = conf.rect_min_width / 2;\n\n  let title = parentNode\n    .append('text')\n    .attr('class', 'req reqLabel reqTitle')\n    .attr('id', id)\n    .attr('x', x)\n    .attr('y', conf.rect_padding)\n    .attr('dominant-baseline', 'hanging');\n  // .attr(\n  //   'style',\n  //   'font-family: ' + configApi.getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n  // )\n  let i = 0;\n  txts.forEach((textStr) => {\n    if (i == 0) {\n      title\n        .append('tspan')\n        .attr('text-anchor', 'middle')\n        .attr('x', conf.rect_min_width / 2)\n        .attr('dy', 0)\n        .text(textStr);\n    } else {\n      title\n        .append('tspan')\n        .attr('text-anchor', 'middle')\n        .attr('x', conf.rect_min_width / 2)\n        .attr('dy', conf.line_height * 0.75)\n        .text(textStr);\n    }\n    i++;\n  });\n\n  let yPadding = 1.5 * conf.rect_padding;\n  let linePadding = i * conf.line_height * 0.75;\n  let totalY = yPadding + linePadding;\n\n  parentNode\n    .append('line')\n    .attr('class', 'req-title-line')\n    .attr('x1', '0')\n    .attr('x2', conf.rect_min_width)\n    .attr('y1', totalY)\n    .attr('y2', totalY);\n\n  return {\n    titleNode: title,\n    y: totalY,\n  };\n};\n\nconst newBodyNode = (parentNode, id, txts, yStart) => {\n  let body = parentNode\n    .append('text')\n    .attr('class', 'req reqLabel')\n    .attr('id', id)\n    .attr('x', conf.rect_padding)\n    .attr('y', yStart)\n    .attr('dominant-baseline', 'hanging');\n  // .attr(\n  //   'style',\n  //   'font-family: ' + configApi.getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n  // );\n\n  let currentRow = 0;\n  const charLimit = 30;\n  let wrappedTxts = [];\n  txts.forEach((textStr) => {\n    let currentTextLen = textStr.length;\n    while (currentTextLen > charLimit && currentRow < 3) {\n      let firstPart = textStr.substring(0, charLimit);\n      textStr = textStr.substring(charLimit, textStr.length);\n      currentTextLen = textStr.length;\n      wrappedTxts[wrappedTxts.length] = firstPart;\n      currentRow++;\n    }\n    if (currentRow == 3) {\n      let lastStr = wrappedTxts[wrappedTxts.length - 1];\n      wrappedTxts[wrappedTxts.length - 1] = lastStr.substring(0, lastStr.length - 4) + '...';\n    } else {\n      wrappedTxts[wrappedTxts.length] = textStr;\n    }\n    currentRow = 0;\n  });\n\n  wrappedTxts.forEach((textStr) => {\n    body.append('tspan').attr('x', conf.rect_padding).attr('dy', conf.line_height).text(textStr);\n  });\n\n  return body;\n};\n\nconst addEdgeLabel = (parentNode, svgPath, conf, txt) => {\n  // Find the half-way point\n  const len = svgPath.node().getTotalLength();\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\n\n  // Append a text node containing the label\n  const labelId = 'rel' + relCnt;\n  relCnt++;\n\n  const labelNode = parentNode\n    .append('text')\n    .attr('class', 'req relationshipLabel')\n    .attr('id', labelId)\n    .attr('x', labelPoint.x)\n    .attr('y', labelPoint.y)\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'middle')\n    // .attr('style', 'font-family: ' + conf.fontFamily + '; font-size: ' + conf.fontSize + 'px')\n    .text(txt);\n\n  // Figure out how big the opaque 'container' rectangle needs to be\n  const labelBBox = labelNode.node().getBBox();\n\n  // Insert the opaque rectangle before the text label\n  parentNode\n    .insert('rect', '#' + labelId)\n    .attr('class', 'req reqLabelBox')\n    .attr('x', labelPoint.x - labelBBox.width / 2)\n    .attr('y', labelPoint.y - labelBBox.height / 2)\n    .attr('width', labelBBox.width)\n    .attr('height', labelBBox.height)\n    .attr('fill', 'white')\n    .attr('fill-opacity', '85%');\n};\n\nconst drawRelationshipFromLayout = function (svg, rel, g, insert, diagObj) {\n  // Find the edge relating to this relationship\n  const edge = g.edge(elementString(rel.src), elementString(rel.dst));\n\n  // Get a function that will generate the line path\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  // Insert the line at the right place\n  const svgPath = svg\n    .insert('path', '#' + insert)\n    .attr('class', 'er relationshipLine')\n    .attr('d', lineFunction(edge.points))\n    .attr('fill', 'none');\n\n  if (rel.type == diagObj.db.Relationships.CONTAINS) {\n    svgPath.attr(\n      'marker-start',\n      'url(' + common.getUrl(conf.arrowMarkerAbsolute) + '#' + rel.type + '_line_ending' + ')'\n    );\n  } else {\n    svgPath.attr('stroke-dasharray', '10,7');\n    svgPath.attr(\n      'marker-end',\n      'url(' +\n        common.getUrl(conf.arrowMarkerAbsolute) +\n        '#' +\n        markers.ReqMarkers.ARROW +\n        '_line_ending' +\n        ')'\n    );\n  }\n\n  addEdgeLabel(svg, svgPath, conf, `<<${rel.type}>>`);\n\n  return;\n};\n\nexport const drawReqs = (reqs, graph, svgNode) => {\n  Object.keys(reqs).forEach((reqName) => {\n    let req = reqs[reqName];\n    reqName = elementString(reqName);\n    log.info('Added new requirement: ', reqName);\n\n    const groupNode = svgNode.append('g').attr('id', reqName);\n    const textId = 'req-' + reqName;\n    const rectNode = newRectNode(groupNode, textId);\n\n    let nodes = [];\n\n    let titleNodeInfo = newTitleNode(groupNode, reqName + '_title', [\n      `<<${req.type}>>`,\n      `${req.name}`,\n    ]);\n\n    nodes.push(titleNodeInfo.titleNode);\n\n    let bodyNode = newBodyNode(\n      groupNode,\n      reqName + '_body',\n      [\n        `Id: ${req.id}`,\n        `Text: ${req.text}`,\n        `Risk: ${req.risk}`,\n        `Verification: ${req.verifyMethod}`,\n      ],\n      titleNodeInfo.y\n    );\n\n    nodes.push(bodyNode);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph\n    graph.setNode(reqName, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: reqName,\n    });\n  });\n};\n\nexport const drawElements = (els, graph, svgNode) => {\n  Object.keys(els).forEach((elName) => {\n    let el = els[elName];\n    const id = elementString(elName);\n\n    const groupNode = svgNode.append('g').attr('id', id);\n    const textId = 'element-' + id;\n    const rectNode = newRectNode(groupNode, textId);\n\n    let nodes = [];\n\n    let titleNodeInfo = newTitleNode(groupNode, textId + '_title', [`<<Element>>`, `${elName}`]);\n\n    nodes.push(titleNodeInfo.titleNode);\n\n    let bodyNode = newBodyNode(\n      groupNode,\n      textId + '_body',\n      [`Type: ${el.type || 'Not Specified'}`, `Doc Ref: ${el.docRef || 'None'}`],\n      titleNodeInfo.y\n    );\n\n    nodes.push(bodyNode);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph\n    graph.setNode(id, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: id,\n    });\n  });\n};\n\nconst addRelationships = (relationships, g) => {\n  relationships.forEach(function (r) {\n    let src = elementString(r.src);\n    let dst = elementString(r.dst);\n    g.setEdge(src, dst, { relationship: r });\n  });\n  return relationships;\n};\n\nconst adjustEntities = function (svgNode, graph) {\n  graph.nodes().forEach(function (v) {\n    if (v !== undefined && graph.node(v) !== undefined) {\n      svgNode.select('#' + v);\n      svgNode\n        .select('#' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y - graph.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n  return;\n};\n\nconst elementString = (str) => {\n  return str.replace(/\\s/g, '').replace(/\\./g, '_');\n};\n\nexport const draw = (text, id, _version, diagObj) => {\n  conf = getConfig().requirement;\n  diagObj.db.clear();\n  diagObj.parser.parse(text);\n\n  const securityLevel = conf.securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n\n  const svg = root.select(`[id='${id}']`);\n  markers.insertLineEndings(svg, conf);\n\n  const g = new graphlib.Graph({\n    multigraph: false,\n    compound: false,\n    directed: true,\n  })\n    .setGraph({\n      rankdir: conf.layoutDirection,\n      marginx: 20,\n      marginy: 20,\n      nodesep: 100,\n      edgesep: 100,\n      ranksep: 100,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let requirements = diagObj.db.getRequirements();\n  let elements = diagObj.db.getElements();\n  let relationships = diagObj.db.getRelationships();\n\n  drawReqs(requirements, g, svg);\n  drawElements(elements, g, svg);\n  addRelationships(relationships, g);\n  dagreLayout(g);\n  adjustEntities(svg, g);\n\n  relationships.forEach(function (rel) {\n    drawRelationshipFromLayout(svg, rel, g, id, diagObj);\n  });\n\n  const padding = conf.rect_padding;\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\n};\n\nexport default {\n  draw,\n};\n","import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/requirementDiagram';\nimport db from './requirementDb';\nimport styles from './styles';\nimport renderer from './requirementRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n","const getStyles = (options) => `\n\n  marker {\n    fill: ${options.relationColor};\n    stroke: ${options.relationColor};\n  }\n\n  marker.cross {\n    stroke: ${options.lineColor};\n  }\n\n  svg {\n    font-family: ${options.fontFamily};\n    font-size: ${options.fontSize};\n  }\n\n  .reqBox {\n    fill: ${options.requirementBackground};\n    fill-opacity: 100%;\n    stroke: ${options.requirementBorderColor};\n    stroke-width: ${options.requirementBorderSize};\n  }\n  \n  .reqTitle, .reqLabel{\n    fill:  ${options.requirementTextColor};\n  }\n  .reqLabelBox {\n    fill: ${options.relationLabelBackground};\n    fill-opacity: 100%;\n  }\n\n  .req-title-line {\n    stroke: ${options.requirementBorderColor};\n    stroke-width: ${options.requirementBorderSize};\n  }\n  .relationshipLine {\n    stroke: ${options.relationColor};\n    stroke-width: 1;\n  }\n  .relationshipLabel {\n    fill: ${options.relationLabelColor};\n  }\n\n`;\n// fill', conf.rect_fill)\nexport default getStyles;\n"],"names":["o","parser","$","lexer","relations","latestRequirement","requirements","latestElement","elements","RequirementType","REQUIREMENT","FUNCTIONAL_REQUIREMENT","INTERFACE_REQUIREMENT","PERFORMANCE_REQUIREMENT","PHYSICAL_REQUIREMENT","DESIGN_CONSTRAINT","RiskLevel","LOW_RISK","MED_RISK","HIGH_RISK","VerifyType","VERIFY_ANALYSIS","VERIFY_DEMONSTRATION","VERIFY_INSPECTION","VERIFY_TEST","Relationships","CONTAINS","COPIES","DERIVES","SATISFIES","VERIFIES","REFINES","TRACES","parseDirective","statement","context","type","m","this","getConfig","configApi.getConfig","req","addRequirement","name","id","text","risk","verifyMethod","getRequirements","setNewReqId","setNewReqText","setNewReqRisk","setNewReqVerifyMethod","setAccTitle","s","getAccTitle","g","setAccDescription","getAccDescription","addElement","docRef","l","getElements","setNewElementType","setNewElementDocRef","addRelationship","src","dst","push","getRelationships","clear","commonClear","ReqMarkers","ARROW","parentNode","conf","containsNode","append","attr","line_height","relCnt","newRectNode","insert","rect_min_width","rect_min_height","newTitleNode","txts","x","title","rect_padding","i","forEach","textStr","totalY","titleNode","y","newBodyNode","yStart","body","currentRow","wrappedTxts","currentTextLen","length","firstPart","substring","lastStr","drawRelationshipFromLayout","svg","rel","diagObj","edge","elementString","lineFunction","d","svgPath","points","db","arrowMarkerAbsolute","markers","txt","len","node","getTotalLength","labelPoint","getPointAtLength","labelId","labelBBox","getBBox","width","height","addEdgeLabel","str","replace","diagram","renderer","draw","_version","requirement","parse","sandboxElement","securityLevel","nodes","contentDocument","select","reqs","graph","svgNode","multigraph","compound","directed","setGraph","rankdir","layoutDirection","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","relationships","Object","keys","reqName","groupNode","rectNode","titleNodeInfo","rectBBox","setNode","shape","els","elName","el","textId","drawElements","r","setEdge","relationship","addRelationships","dagreLayout","v","adjustEntities","padding","svgBounds","c","useMaxWidth","styles","options","relationColor","lineColor","fontFamily","fontSize","requirementBackground","requirementBorderColor","requirementBorderSize","requirementTextColor","relationLabelBackground","relationLabelColor"],"sourceRoot":""}