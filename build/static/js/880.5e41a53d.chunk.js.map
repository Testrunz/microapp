{"version":3,"file":"static/js/880.5e41a53d.chunk.js","mappings":"wJAQA,I,kFAFMA,EAAY,GAETC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,IAGzC,SAASC,EAAgBC,GAAiB,IAAZC,EAAY,uDAAH,EAG5C,OAAOP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAiBhf,IChCA,wHCMA,MAJA,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAAA,KAAWD,IC+BhD,MAhCA,SAAeA,GACb,IAAKE,EAASF,GACZ,MAAMG,UAAU,gBAGlB,IAAIC,EACEN,EAAM,IAAIO,WAAW,IAuB3B,OArBAP,EAAI,IAAMM,EAAIE,SAASN,EAAKJ,MAAM,EAAG,GAAI,OAAS,GAClDE,EAAI,GAAKM,IAAM,GAAK,IACpBN,EAAI,GAAKM,IAAM,EAAI,IACnBN,EAAI,GAAS,IAAJM,EAETN,EAAI,IAAMM,EAAIE,SAASN,EAAKJ,MAAM,EAAG,IAAK,OAAS,EACnDE,EAAI,GAAS,IAAJM,EAETN,EAAI,IAAMM,EAAIE,SAASN,EAAKJ,MAAM,GAAI,IAAK,OAAS,EACpDE,EAAI,GAAS,IAAJM,EAETN,EAAI,IAAMM,EAAIE,SAASN,EAAKJ,MAAM,GAAI,IAAK,OAAS,EACpDE,EAAI,GAAS,IAAJM,EAGTN,EAAI,KAAOM,EAAIE,SAASN,EAAKJ,MAAM,GAAI,IAAK,KAAO,cAAgB,IACnEE,EAAI,IAAMM,EAAI,WAAc,IAC5BN,EAAI,IAAMM,IAAM,GAAK,IACrBN,EAAI,IAAMM,IAAM,GAAK,IACrBN,EAAI,IAAMM,IAAM,EAAI,IACpBN,EAAI,IAAU,IAAJM,EACHN,GC7BT,SAASS,EAAEC,EAAGC,EAAGC,EAAGC,GAClB,OAAQH,GACN,KAAK,EACH,OAAOC,EAAIC,GAAKD,EAAIE,EAEtB,KAAK,EAML,KAAK,EACH,OAAOF,EAAIC,EAAIC,EAJjB,KAAK,EACH,OAAOF,EAAIC,EAAID,EAAIE,EAAID,EAAIC,GAOjC,SAASC,EAAKH,EAAGI,GACf,OAAOJ,GAAKI,EAAIJ,IAAM,GAAKI,EA4E7B,MAzEA,SAAcC,GACZ,IAAMC,EAAI,CAAC,WAAY,WAAY,WAAY,YACzCC,EAAI,CAAC,WAAY,WAAY,WAAY,UAAY,YAE3D,GAAqB,kBAAVF,EAAoB,CAC7B,IAAMG,EAAMC,SAASC,mBAAmBL,IAExCA,EAAQ,GAER,IAAK,IAAIrB,EAAI,EAAGA,EAAIwB,EAAIG,SAAU3B,EAChCqB,EAAMpB,KAAKuB,EAAII,WAAW5B,SAElB6B,MAAMC,QAAQT,KAExBA,EAAQQ,MAAME,UAAU5B,MAAM6B,KAAKX,IAGrCA,EAAMpB,KAAK,KAKX,IAJA,IAAMgC,EAAIZ,EAAMM,OAAS,EAAI,EACvBO,EAAIC,KAAKC,KAAKH,EAAI,IAClBI,EAAI,IAAIR,MAAMK,GAEXlC,EAAI,EAAGA,EAAIkC,IAAKlC,EAAG,CAG1B,IAFA,IAAMK,EAAM,IAAIiC,YAAY,IAEnBC,EAAI,EAAGA,EAAI,KAAMA,EACxBlC,EAAIkC,GAAKlB,EAAU,GAAJrB,EAAa,EAAJuC,IAAU,GAAKlB,EAAU,GAAJrB,EAAa,EAAJuC,EAAQ,IAAM,GAAKlB,EAAU,GAAJrB,EAAa,EAAJuC,EAAQ,IAAM,EAAIlB,EAAU,GAAJrB,EAAa,EAAJuC,EAAQ,GAGnIF,EAAErC,GAAKK,EAGTgC,EAAEH,EAAI,GAAG,IAA2B,GAApBb,EAAMM,OAAS,GAASQ,KAAKK,IAAI,EAAG,IACpDH,EAAEH,EAAI,GAAG,IAAMC,KAAKM,MAAMJ,EAAEH,EAAI,GAAG,KACnCG,EAAEH,EAAI,GAAG,IAA2B,GAApBb,EAAMM,OAAS,GAAS,WAExC,IAAK,IAAI3B,EAAI,EAAGA,EAAIkC,IAAKlC,EAAG,CAG1B,IAFA,IAAM0C,EAAI,IAAIJ,YAAY,IAEjBK,EAAI,EAAGA,EAAI,KAAMA,EACxBD,EAAEC,GAAKN,EAAErC,GAAG2C,GAGd,IAAK,IAAIA,EAAI,GAAIA,EAAI,KAAMA,EACzBD,EAAEC,GAAKxB,EAAKuB,EAAEC,EAAI,GAAKD,EAAEC,EAAI,GAAKD,EAAEC,EAAI,IAAMD,EAAEC,EAAI,IAAK,GAS3D,IANA,IAAIC,EAAIrB,EAAE,GACNsB,EAAItB,EAAE,GACNuB,EAAIvB,EAAE,GACNwB,EAAIxB,EAAE,GACNyB,EAAIzB,EAAE,GAEDoB,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,IAAM5B,EAAIoB,KAAKM,MAAME,EAAI,IACnBM,EAAI9B,EAAKyB,EAAG,GAAK9B,EAAEC,EAAG8B,EAAGC,EAAGC,GAAKC,EAAI1B,EAAEP,GAAK2B,EAAEC,KAAO,EAC3DK,EAAID,EACJA,EAAID,EACJA,EAAI3B,EAAK0B,EAAG,MAAQ,EACpBA,EAAID,EACJA,EAAIK,EAGN1B,EAAE,GAAKA,EAAE,GAAKqB,IAAM,EACpBrB,EAAE,GAAKA,EAAE,GAAKsB,IAAM,EACpBtB,EAAE,GAAKA,EAAE,GAAKuB,IAAM,EACpBvB,EAAE,GAAKA,EAAE,GAAKwB,IAAM,EACpBxB,EAAE,GAAKA,EAAE,GAAKyB,IAAM,EAGtB,MAAO,CAACzB,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,KC1FlV2B,ECeS,SAAaC,EAAMC,EAASC,GACzC,SAASC,EAAaC,EAAOC,EAAWC,EAAKnD,GAC3C,IAAIoD,EAUJ,GARqB,kBAAVH,IACTA,EAnBN,SAAuBI,GACrBA,EAAMlC,SAASC,mBAAmBiC,IAIlC,IAFA,IAAMtC,EAAQ,GAELrB,EAAI,EAAGA,EAAI2D,EAAIhC,SAAU3B,EAChCqB,EAAMpB,KAAK0D,EAAI/B,WAAW5B,IAG5B,OAAOqB,EAUKuC,CAAcL,IAGC,kBAAdC,IACTA,EAAYK,EAAML,IAG8E,MAAhE,QAA5BE,EAAaF,SAAsC,IAAfE,OAAwB,EAASA,EAAW/B,QACpF,MAAMjB,UAAU,oEAMlB,IAAIW,EAAQ,IAAIT,WAAW,GAAK2C,EAAM5B,QAOtC,GANAN,EAAMyC,IAAIN,GACVnC,EAAMyC,IAAIP,EAAOC,EAAU7B,SAC3BN,EAAQgC,EAAShC,IACX,GAAgB,GAAXA,EAAM,GAAY+B,EAC7B/B,EAAM,GAAgB,GAAXA,EAAM,GAAY,IAEzBoC,EAAK,CACPnD,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxByD,EAAInD,EAASN,GAAKqB,EAAMrB,GAG1B,OAAOyD,EAGT,OAAOrD,EAAgBiB,GAIzB,IACEiC,EAAaH,KAAOA,EACpB,MAAOY,IAKT,OAFAT,EAAaU,IA/CI,uCAgDjBV,EAAaW,IA/CI,uCAgDVX,ED9DEY,CAAI,KAAM,GAAMC,GAC3B,IEsEI,G,uBAAU,WACd,IAAI,EAAE,SAAS,EAAE,EAAEC,EAAE,GAAG,IAAIA,EAAEA,GAAG,GAAG,EAAE,EAAE,OAAO,IAAIA,EAAE,EAAE,IAAI,GAAG,OAAO,GAAG,EAAI,CAAC,EAAE,GAAG,EAAI,CAAC,EAAE,GAAG,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAI,CAAC,GAAG,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,EAAE,IAAI,EAAI,CAAC,GAAG,GAAG,GAAG,IAC1aC,EAAS,CAAC,MAAO,aACrB,GAAI,GACA,SAAM,CAAC,MAAQ,EAAE,MAAQ,EAAE,WAAa,EAAE,SAAW,EAAE,IAAM,EAAE,UAAY,EAAE,KAAO,EAAE,MAAQ,EAAE,UAAY,GAAG,QAAU,GAAG,cAAgB,GAAG,cAAgB,GAAG,eAAiB,GAAG,IAAI,GAAG,aAAe,GAAG,WAAa,GAAG,QAAU,GAAG,KAAO,GAAG,YAAc,GAAG,WAAa,GAAG,WAAa,GAAG,MAAQ,GAAG,YAAc,GAAG,UAAY,GAAG,gBAAkB,GAAG,UAAY,GAAG,gBAAkB,GAAG,0BAA4B,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,cAAgB,GAAG,cAAgB,GAAG,qBAAuB,GAAG,iBAAmB,GAAG,eAAiB,GAAG,iBAAmB,GAAG,MAAQ,GAAG,cAAgB,GAAG,QAAU,GAAG,YAAc,GAAG,QAAU,GAAG,YAAc,GAAG,aAAe,GAAG,YAAc,GAAG,SAAW,GAAG,gBAAkB,GAAG,YAAc,GAAG,KAAO,GAAG,eAAiB,GAAG,eAAiB,GAAG,cAAgB,GAAG,gBAAkB,GAAG,QAAU,EAAE,KAAO,GAC13B,WAAY,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,QAAQ,GAAG,UAAU,GAAG,IAAI,GAAG,cAAc,GAAG,aAAa,GAAG,QAAQ,GAAG,cAAc,GAAG,YAAY,GAAG,kBAAkB,GAAG,YAAY,GAAG,kBAAkB,GAAG,4BAA4B,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,QAAQ,GAAG,gBAAgB,GAAG,UAAU,GAAG,cAAc,GAAG,eAAe,GAAG,cAAc,GAAG,WAAW,GAAG,kBAAkB,GAAG,cAAc,GAAG,OAAO,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,mBAC1f,acAAe,SAAmB,EAAQ,EAAQ,EAAU,EAAI,EAAyB,EAAiB,GAG1G,IAAI,EAAK,EAAG,OAAS,EACrB,OAAQ,GACR,KAAK,EAEL,MACA,KAAK,EASL,KAAK,EAAG,KAAK,EACZ,KAAK,EAAE,GACR,MARA,KAAK,EACL,EAAG,EAAG,GAAG,KAAK,EAAG,IAAK,KAAK,EAAI,EAAG,EAAG,GACrC,MACA,KAAK,EAAG,KAAK,EAkCb,KAAK,GAAI,KAAK,GAwBd,KAAK,GAAI,KAAK,GAAI,KAAK,GACtB,KAAK,EAAE,EAAG,GACX,MAtDA,KAAK,GAEKC,EAAGC,UAAU,EAAG,EAAG,IACnBD,EAAGC,UAAU,EAAG,EAAG,IACnBD,EAAGE,gBAAgB,EAAG,EAAG,GAAI,EAAG,GAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAG/D,MACA,KAAK,GAGKF,EAAG,UAAU,EAAG,EAAG,IACnB,EAAG,cAAc,EAAG,EAAG,GAAI,EAAG,EAAG,IAG3C,MACA,KAAK,GACJ,EAAG,UAAU,EAAG,EAAG,IACpB,MACA,KAAK,GACJ,EAAG,UAAU,EAAG,IACjB,MACA,KAAK,GAAI,KAAK,GACb,KAAK,EAAE,EAAG,GAAI,OAAO,EAAG,YAAY,KAAK,GAC1C,MACA,KAAK,GAAI,KAAK,GACb,KAAK,EAAE,EAAG,GAAI,OAAO,EAAG,kBAAkB,KAAK,GAChD,MAIA,KAAK,GAAI,KAAK,GAAI,KAAK,GA2BvB,KAAK,GACJ,KAAK,EAAE,EAAG,GAAI,QAAQ,KAAM,IAC7B,MA1BA,KAAK,GAAI,KAAK,GACb,KAAK,EAAI,CAAC,EAAG,IACd,MACA,KAAK,GACJ,EAAG,GAAI,KAAK,EAAG,EAAG,IAAK,KAAK,EAAE,EAAG,GAClC,MACA,KAAK,GACJ,KAAK,EAAI,CAAE,cAAe,EAAG,EAAG,GAAI,cAAe,EAAG,IACvD,MACA,KAAK,GACJ,KAAK,EAAI,CAAE,cAAe,EAAG,EAAG,GAAI,cAAe,EAAG,EAAG,GAAI,qBAAsB,EAAG,IACvF,MACA,KAAK,GACJ,KAAK,EAAI,CAAE,cAAe,EAAG,EAAG,GAAI,cAAe,EAAG,EAAG,GAAI,iBAAkB,EAAG,IACnF,MACA,KAAK,GACJ,KAAK,EAAI,CAAE,cAAe,EAAG,EAAG,GAAI,cAAe,EAAG,EAAG,GAAI,qBAAsB,EAAG,EAAG,GAAI,iBAAkB,EAAG,IACnH,MAIA,KAAK,GACJ,EAAG,EAAG,GAAG,KAAK,EAAG,IAAM,KAAK,EAAI,EAAG,EAAG,GACvC,MAIA,KAAK,GAEG,KAAK,EAAI,CAAE,MAAO,EAAG,GAAK,QAAS,EAAG,EAAG,GAAI,MAAO,EAAG,EAAG,IAGlE,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,YAAY,YACzB,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,YAAY,aACzB,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,YAAY,YACzB,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,YAAY,SACzB,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,eAAe,gBAC5B,MACA,KAAK,GACJ,KAAK,EAAI,EAAG,eAAe,YAC5B,MACA,KAAK,GACJ,EAAG,eAAe,MAAO,kBAC1B,MACA,KAAK,GACJ,EAAG,eAAe,EAAG,GAAK,kBAC3B,MACA,KAAK,GACJ,EAAG,GAAM,EAAG,GAAI,OAAO,QAAQ,KAAM,KAAM,EAAG,eAAe,EAAG,GAAK,iBACtE,MACA,KAAK,GACJ,EAAG,eAAe,MAAO,kBAAmB,QAI7C,MAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,GAAK,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,GAAK,EAAE,EAAI,CAAC,EAAE,IAAI,EAAE,EAAI,CAAC,EAAE,IAAI,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,IAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAI,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,KAAK,EAAE,EAAI,CAAC,EAAE,IA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","sources":["../node_modules/mermaid/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/regex.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/validate.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/parse.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/v5.js","../node_modules/mermaid/node_modules/uuid/dist/esm-browser/v35.js","../node_modules/mermaid/src/diagrams/er/parser/erDiagram.jison","../node_modules/mermaid/src/diagrams/er/erDb.js","../node_modules/mermaid/src/diagrams/er/erMarkers.js","../node_modules/mermaid/src/diagrams/er/erRenderer.js","../node_modules/mermaid/src/diagrams/er/erDiagram.ts","../node_modules/mermaid/src/diagrams/er/styles.js"],"sourcesContent":["import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","%lex\n\n%options case-insensitive\n%x open_directive type_directive arg_directive block\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n\n%%\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[\\n]+                           return 'NEWLINE';\n\\s+                             /* skip whitespace */\n[\\s]+                           return 'SPACE';\n\\\"[^\"%\\r\\n\\v\\b\\\\]+\\\"            return 'ENTITY_NAME';\n\\\"[^\"]*\\\"                       return 'WORD';\n\"erDiagram\"                     return 'ER_DIAGRAM';\n\"{\"                             { this.begin(\"block\"); return 'BLOCK_START'; }\n<block>\",\"                      return 'COMMA';\n<block>\\s+                      /* skip whitespace in block */\n<block>\\b((?:PK)|(?:FK)|(?:UK))\\b      return 'ATTRIBUTE_KEY'\n<block>(.*?)[~](.*?)*[~]        return 'ATTRIBUTE_WORD';\n<block>[A-Za-z_][A-Za-z0-9\\-_\\[\\]\\(\\)]*  return 'ATTRIBUTE_WORD'\n<block>\\\"[^\"]*\\\"                return 'COMMENT';\n<block>[\\n]+                    /* nothing */\n<block>\"}\"                      { this.popState(); return 'BLOCK_STOP'; }\n<block>.                        return yytext[0];\n\n\"one or zero\"                   return 'ZERO_OR_ONE';\n\"one or more\"                   return 'ONE_OR_MORE';\n\"one or many\"                   return 'ONE_OR_MORE';\n\"1+\"                            return 'ONE_OR_MORE';\n\\|o                             return 'ZERO_OR_ONE';\n\"zero or one\"                   return 'ZERO_OR_ONE';\n\"zero or more\"                  return 'ZERO_OR_MORE';\n\"zero or many\"                  return 'ZERO_OR_MORE';\n\"0+\"                            return 'ZERO_OR_MORE';\n\\}o                             return 'ZERO_OR_MORE';\n\"many(0)\"                       return 'ZERO_OR_MORE';\n\"many(1)\"                       return 'ONE_OR_MORE';\n\"many\"                          return 'ZERO_OR_MORE';\n\\}\\|                            return 'ONE_OR_MORE';\n\"one\"                           return 'ONLY_ONE';\n\"only one\"                      return 'ONLY_ONE';\n\"1\"                             return 'ONLY_ONE';\n\\|\\|                            return 'ONLY_ONE';\no\\|                             return 'ZERO_OR_ONE';\no\\{                             return 'ZERO_OR_MORE';\n\\|\\{                            return 'ONE_OR_MORE';\n\\.\\.                            return 'NON_IDENTIFYING';\n\\-\\-                            return 'IDENTIFYING';\n\"to\"                            return 'IDENTIFYING';\n\"optionally to\"                 return 'NON_IDENTIFYING';\n\\.\\-                            return 'NON_IDENTIFYING';\n\\-\\.                            return 'NON_IDENTIFYING';\n[A-Za-z][A-Za-z0-9\\-_]*         return 'ALPHANUM';\n.                               return yytext[0];\n<<EOF>>                         return 'EOF';\n\n/lex\n\n%start start\n%% /* language grammar */\n\nstart\n    : 'ER_DIAGRAM' document 'EOF' { /*console.log('finished parsing');*/ }\n  \t| directive start\n    ;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[];}\n\t| EOF { $$=[];}\n\t;\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n    : directive\n    | entityName relSpec entityName ':' role\n      {\n          yy.addEntity($1);\n          yy.addEntity($3);\n          yy.addRelationship($1, $5, $3, $2);\n          /*console.log($1 + $2 + $3 + ':' + $5);*/\n      }\n    | entityName BLOCK_START attributes BLOCK_STOP\n      {\n          /* console.log('detected block'); */\n          yy.addEntity($1);\n          yy.addAttributes($1, $3);\n          /* console.log('handled block'); */\n      }\n    | entityName BLOCK_START BLOCK_STOP { yy.addEntity($1); }\n    | entityName { yy.addEntity($1); }\n    | title title_value  { $$=$2.trim();yy.setAccTitle($$); }\n    | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n    | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n    | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n    ;\n\nentityName\n    : 'ALPHANUM'      { $$ = $1; }\n    | 'ENTITY_NAME'      { $$ = $1.replace(/\"/g, ''); }\n    ;\n\nattributes\n    : attribute { $$ = [$1]; }\n    | attribute attributes { $2.push($1); $$=$2; }\n    ;\n\nattribute\n    : attributeType attributeName { $$ = { attributeType: $1, attributeName: $2 }; }\n    | attributeType attributeName attributeKeyTypeList { $$ = { attributeType: $1, attributeName: $2, attributeKeyTypeList: $3 }; }\n    | attributeType attributeName attributeComment { $$ = { attributeType: $1, attributeName: $2, attributeComment: $3 }; }\n    | attributeType attributeName attributeKeyTypeList attributeComment { $$ = { attributeType: $1, attributeName: $2, attributeKeyTypeList: $3, attributeComment: $4 }; }\n    ;\n\n\nattributeType\n    : ATTRIBUTE_WORD { $$=$1; }\n    ;\n\nattributeName\n    : ATTRIBUTE_WORD { $$=$1; }\n    ;\n\nattributeKeyTypeList\n    : attributeKeyType { $$ = [$1]; }\n    | attributeKeyTypeList COMMA attributeKeyType { $1.push($3); $$ = $1; }\n    ;\n\nattributeKeyType\n    : ATTRIBUTE_KEY { $$=$1; }\n    ;\n\nattributeComment\n    : COMMENT { $$=$1.replace(/\"/g, ''); }\n    ;\n\nrelSpec\n    : cardinality relType cardinality\n      {\n        $$ = { cardA: $3, relType: $2, cardB: $1 };\n        /*console.log('relSpec: ' + $3 + $2 + $1);*/\n      }\n    ;\n\ncardinality\n    : 'ZERO_OR_ONE'                  { $$ = yy.Cardinality.ZERO_OR_ONE; }\n    | 'ZERO_OR_MORE'                 { $$ = yy.Cardinality.ZERO_OR_MORE; }\n    | 'ONE_OR_MORE'                  { $$ = yy.Cardinality.ONE_OR_MORE; }\n    | 'ONLY_ONE'                     { $$ = yy.Cardinality.ONLY_ONE; }\n    ;\n\nrelType\n    : 'NON_IDENTIFYING'              { $$ = yy.Identification.NON_IDENTIFYING;  }\n    | 'IDENTIFYING'                  { $$ = yy.Identification.IDENTIFYING; }\n    ;\n\nrole\n    : 'WORD'      { $$ = $1.replace(/\"/g, ''); }\n    | 'ENTITY_NAME' { $$ = $1.replace(/\"/g, ''); }\n    | 'ALPHANUM'  { $$ = $1; }\n    ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'er'); }\n  ;\n\n%%\n","import { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\n\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n  setDiagramTitle,\n  getDiagramTitle,\n} from '../../commonDb';\n\nlet entities = {};\nlet relationships = [];\n\nconst Cardinality = {\n  ZERO_OR_ONE: 'ZERO_OR_ONE',\n  ZERO_OR_MORE: 'ZERO_OR_MORE',\n  ONE_OR_MORE: 'ONE_OR_MORE',\n  ONLY_ONE: 'ONLY_ONE',\n};\n\nconst Identification = {\n  NON_IDENTIFYING: 'NON_IDENTIFYING',\n  IDENTIFYING: 'IDENTIFYING',\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addEntity = function (name) {\n  if (entities[name] === undefined) {\n    entities[name] = { attributes: [] };\n    log.info('Added new entity :', name);\n  }\n\n  return entities[name];\n};\n\nconst getEntities = () => entities;\n\nconst addAttributes = function (entityName, attribs) {\n  let entity = addEntity(entityName); // May do nothing (if entity has already been added)\n\n  // Process attribs in reverse order due to effect of recursive construction (last attribute is first)\n  let i;\n  for (i = attribs.length - 1; i >= 0; i--) {\n    entity.attributes.push(attribs[i]);\n    log.debug('Added attribute ', attribs[i].attributeName);\n  }\n};\n\n/**\n * Add a relationship\n *\n * @param entA The first entity in the relationship\n * @param rolA The role played by the first entity in relation to the second\n * @param entB The second entity in the relationship\n * @param rSpec The details of the relationship between the two entities\n */\nconst addRelationship = function (entA, rolA, entB, rSpec) {\n  let rel = {\n    entityA: entA,\n    roleA: rolA,\n    entityB: entB,\n    relSpec: rSpec,\n  };\n\n  relationships.push(rel);\n  log.debug('Added new relationship :', rel);\n};\n\nconst getRelationships = () => relationships;\n\nconst clear = function () {\n  entities = {};\n  relationships = [];\n  commonClear();\n};\n\nexport default {\n  Cardinality,\n  Identification,\n  parseDirective,\n  getConfig: () => configApi.getConfig().er,\n  addEntity,\n  addAttributes,\n  getEntities,\n  addRelationship,\n  getRelationships,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  setDiagramTitle,\n  getDiagramTitle,\n};\n","const ERMarkers = {\n  ONLY_ONE_START: 'ONLY_ONE_START',\n  ONLY_ONE_END: 'ONLY_ONE_END',\n  ZERO_OR_ONE_START: 'ZERO_OR_ONE_START',\n  ZERO_OR_ONE_END: 'ZERO_OR_ONE_END',\n  ONE_OR_MORE_START: 'ONE_OR_MORE_START',\n  ONE_OR_MORE_END: 'ONE_OR_MORE_END',\n  ZERO_OR_MORE_START: 'ZERO_OR_MORE_START',\n  ZERO_OR_MORE_END: 'ZERO_OR_MORE_END',\n};\n\n/**\n * Put the markers into the svg DOM for later use with edge paths\n *\n * @param elem\n * @param conf\n */\nconst insertMarkers = function (elem, conf) {\n  let marker;\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M9,0 L9,18 M15,0 L15,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_END)\n    .attr('refX', 18)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,0 L3,18 M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 21)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_END)\n    .attr('refX', 30)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M21,0 L21,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q 18,0 36,18 Q 18,36 0,18 M42,9 L42,27');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_END)\n    .attr('refX', 27)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,9 L3,27 M9,18 Q27,0 45,18 Q27,36 9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 48)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q18,0 36,18 Q18,36 0,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_END)\n    .attr('refX', 39)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M21,18 Q39,0 57,18 Q39,36 21,18');\n\n  return;\n};\n\nexport default {\n  ERMarkers,\n  insertMarkers,\n};\n","import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { line, curveBasis, select } from 'd3';\nimport { layout as dagreLayout } from 'dagre-d3-es/src/dagre/index.js';\nimport { getConfig } from '../../config';\nimport { log } from '../../logger';\nimport utils from '../../utils';\nimport erMarkers from './erMarkers';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport { parseGenericTypes } from '../common/common';\nimport { v5 as uuid5 } from 'uuid';\n\n/** Regex used to remove chars from the entity name so the result can be used in an id */\nconst BAD_ID_CHARS_REGEXP = /[^\\dA-Za-z](\\W)*/g;\n\n// Configuration\nlet conf = {};\n\n// Map so we can look up the id of an entity based on the name\nlet entityNameIds = new Map();\n\n/**\n * Allows the top-level API module to inject config specific to this renderer, storing it in the\n * local conf object. Note that generic config still needs to be retrieved using getConfig()\n * imported from the config module\n *\n * @param cnf\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Draw attributes for an entity\n *\n * @param groupNode The svg group node for the entity\n * @param entityTextNode The svg node for the entity label text\n * @param attributes An array of attributes defined for the entity (each attribute has a type and a\n *   name)\n * @returns {object} The bounding box of the entity, after attributes have been added. The bounding\n *   box has a .width and .height\n */\nconst drawAttributes = (groupNode, entityTextNode, attributes) => {\n  const heightPadding = conf.entityPadding / 3; // Padding internal to attribute boxes\n  const widthPadding = conf.entityPadding / 3; // Ditto\n  const attrFontSize = conf.fontSize * 0.85;\n  const labelBBox = entityTextNode.node().getBBox();\n  const attributeNodes = []; // Intermediate storage for attribute nodes created so that we can do a second pass\n  let hasKeyType = false;\n  let hasComment = false;\n  let maxTypeWidth = 0;\n  let maxNameWidth = 0;\n  let maxKeyWidth = 0;\n  let maxCommentWidth = 0;\n  let cumulativeHeight = labelBBox.height + heightPadding * 2;\n  let attrNum = 1;\n\n  // Check to see if any of the attributes has a key or a comment\n  attributes.forEach((item) => {\n    if (item.attributeKeyTypeList !== undefined && item.attributeKeyTypeList.length > 0) {\n      hasKeyType = true;\n    }\n\n    if (item.attributeComment !== undefined) {\n      hasComment = true;\n    }\n  });\n\n  attributes.forEach((item) => {\n    const attrPrefix = `${entityTextNode.node().id}-attr-${attrNum}`;\n    let nodeHeight = 0;\n\n    const attributeType = parseGenericTypes(item.attributeType);\n\n    // Add a text node for the attribute type\n    const typeNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', `${attrPrefix}-type`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'left')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', attrFontSize + 'px')\n      .text(attributeType);\n\n    // Add a text node for the attribute name\n    const nameNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', `${attrPrefix}-name`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'left')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', attrFontSize + 'px')\n      .text(item.attributeName);\n\n    const attributeNode = {};\n    attributeNode.tn = typeNode;\n    attributeNode.nn = nameNode;\n\n    const typeBBox = typeNode.node().getBBox();\n    const nameBBox = nameNode.node().getBBox();\n    maxTypeWidth = Math.max(maxTypeWidth, typeBBox.width);\n    maxNameWidth = Math.max(maxNameWidth, nameBBox.width);\n\n    nodeHeight = Math.max(typeBBox.height, nameBBox.height);\n\n    if (hasKeyType) {\n      const keyTypeNodeText =\n        item.attributeKeyTypeList !== undefined ? item.attributeKeyTypeList.join(',') : '';\n\n      const keyTypeNode = groupNode\n        .append('text')\n        .classed('er entityLabel', true)\n        .attr('id', `${attrPrefix}-key`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .style('dominant-baseline', 'middle')\n        .style('text-anchor', 'left')\n        .style('font-family', getConfig().fontFamily)\n        .style('font-size', attrFontSize + 'px')\n        .text(keyTypeNodeText);\n\n      attributeNode.kn = keyTypeNode;\n      const keyTypeBBox = keyTypeNode.node().getBBox();\n      maxKeyWidth = Math.max(maxKeyWidth, keyTypeBBox.width);\n      nodeHeight = Math.max(nodeHeight, keyTypeBBox.height);\n    }\n\n    if (hasComment) {\n      const commentNode = groupNode\n        .append('text')\n        .classed('er entityLabel', true)\n        .attr('id', `${attrPrefix}-comment`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .style('dominant-baseline', 'middle')\n        .style('text-anchor', 'left')\n        .style('font-family', getConfig().fontFamily)\n        .style('font-size', attrFontSize + 'px')\n        .text(item.attributeComment || '');\n\n      attributeNode.cn = commentNode;\n      const commentNodeBBox = commentNode.node().getBBox();\n      maxCommentWidth = Math.max(maxCommentWidth, commentNodeBBox.width);\n      nodeHeight = Math.max(nodeHeight, commentNodeBBox.height);\n    }\n\n    attributeNode.height = nodeHeight;\n    // Keep a reference to the nodes so that we can iterate through them later\n    attributeNodes.push(attributeNode);\n    cumulativeHeight += nodeHeight + heightPadding * 2;\n    attrNum += 1;\n  });\n\n  let widthPaddingFactor = 4;\n  if (hasKeyType) {\n    widthPaddingFactor += 2;\n  }\n  if (hasComment) {\n    widthPaddingFactor += 2;\n  }\n\n  const maxWidth = maxTypeWidth + maxNameWidth + maxKeyWidth + maxCommentWidth;\n\n  // Calculate the new bounding box of the overall entity, now that attributes have been added\n  const bBox = {\n    width: Math.max(\n      conf.minEntityWidth,\n      Math.max(\n        labelBBox.width + conf.entityPadding * 2,\n        maxWidth + widthPadding * widthPaddingFactor\n      )\n    ),\n    height:\n      attributes.length > 0\n        ? cumulativeHeight\n        : Math.max(conf.minEntityHeight, labelBBox.height + conf.entityPadding * 2),\n  };\n\n  if (attributes.length > 0) {\n    // There might be some spare width for padding out attributes if the entity name is very long\n    const spareColumnWidth = Math.max(\n      0,\n      (bBox.width - maxWidth - widthPadding * widthPaddingFactor) / (widthPaddingFactor / 2)\n    );\n\n    // Position the entity label near the top of the entity bounding box\n    entityTextNode.attr(\n      'transform',\n      'translate(' + bBox.width / 2 + ',' + (heightPadding + labelBBox.height / 2) + ')'\n    );\n\n    // Add rectangular boxes for the attribute types/names\n    let heightOffset = labelBBox.height + heightPadding * 2; // Start at the bottom of the entity label\n    let attribStyle = 'attributeBoxOdd'; // We will flip the style on alternate rows to achieve a banded effect\n\n    attributeNodes.forEach((attributeNode) => {\n      // Calculate the alignment y co-ordinate for the type/name of the attribute\n      const alignY = heightOffset + heightPadding + attributeNode.height / 2;\n\n      // Position the type attribute\n      attributeNode.tn.attr('transform', 'translate(' + widthPadding + ',' + alignY + ')');\n\n      // TODO Handle spareWidth in attr('width')\n      // Insert a rectangle for the type\n      const typeRect = groupNode\n        .insert('rect', '#' + attributeNode.tn.node().id)\n        .classed(`er ${attribStyle}`, true)\n        .attr('x', 0)\n        .attr('y', heightOffset)\n        .attr('width', maxTypeWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      const nameXOffset = parseFloat(typeRect.attr('x')) + parseFloat(typeRect.attr('width'));\n\n      // Position the name attribute\n      attributeNode.nn.attr(\n        'transform',\n        'translate(' + (nameXOffset + widthPadding) + ',' + alignY + ')'\n      );\n\n      // Insert a rectangle for the name\n      const nameRect = groupNode\n        .insert('rect', '#' + attributeNode.nn.node().id)\n        .classed(`er ${attribStyle}`, true)\n        .attr('x', nameXOffset)\n        .attr('y', heightOffset)\n        .attr('width', maxNameWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      let keyTypeAndCommentXOffset =\n        parseFloat(nameRect.attr('x')) + parseFloat(nameRect.attr('width'));\n\n      if (hasKeyType) {\n        // Position the key type attribute\n        attributeNode.kn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the key type\n        const keyTypeRect = groupNode\n          .insert('rect', '#' + attributeNode.kn.node().id)\n          .classed(`er ${attribStyle}`, true)\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxKeyWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n\n        keyTypeAndCommentXOffset =\n          parseFloat(keyTypeRect.attr('x')) + parseFloat(keyTypeRect.attr('width'));\n      }\n\n      if (hasComment) {\n        // Position the comment attribute\n        attributeNode.cn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the comment\n        groupNode\n          .insert('rect', '#' + attributeNode.cn.node().id)\n          .classed(`er ${attribStyle}`, 'true')\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxCommentWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n      }\n\n      // Increment the height offset to move to the next row\n      heightOffset += attributeNode.height + heightPadding * 2;\n\n      // Flip the attribute style for row banding\n      attribStyle = attribStyle === 'attributeBoxOdd' ? 'attributeBoxEven' : 'attributeBoxOdd';\n    });\n  } else {\n    // Ensure the entity box is a decent size without any attributes\n    bBox.height = Math.max(conf.minEntityHeight, cumulativeHeight);\n\n    // Position the entity label in the middle of the box\n    entityTextNode.attr('transform', 'translate(' + bBox.width / 2 + ',' + bBox.height / 2 + ')');\n  }\n\n  return bBox;\n};\n\n/**\n * Use D3 to construct the svg elements for the entities\n *\n * @param svgNode The svg node that contains the diagram\n * @param entities The entities to be drawn\n * @param graph The graph that contains the vertex and edge definitions post-layout\n * @returns {object} The first entity that was inserted\n */\nconst drawEntities = function (svgNode, entities, graph) {\n  const keys = Object.keys(entities);\n  let firstOne;\n\n  keys.forEach(function (entityName) {\n    const entityId = generateId(entityName, 'entity');\n    entityNameIds.set(entityName, entityId);\n\n    // Create a group for each entity\n    const groupNode = svgNode.append('g').attr('id', entityId);\n\n    firstOne = firstOne === undefined ? entityId : firstOne;\n\n    // Label the entity - this is done first so that we can get the bounding box\n    // which then determines the size of the rectangle\n    const textId = 'text-' + entityId;\n    const textNode = groupNode\n      .append('text')\n      .classed('er entityLabel', true)\n      .attr('id', textId)\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('dominant-baseline', 'middle')\n      .style('text-anchor', 'middle')\n      .style('font-family', getConfig().fontFamily)\n      .style('font-size', conf.fontSize + 'px')\n      .text(entityName);\n\n    const { width: entityWidth, height: entityHeight } = drawAttributes(\n      groupNode,\n      textNode,\n      entities[entityName].attributes\n    );\n\n    // Draw the rectangle - insert it before the text so that the text is not obscured\n    const rectNode = groupNode\n      .insert('rect', '#' + textId)\n      .classed('er entityBox', true)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', entityWidth)\n      .attr('height', entityHeight);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph using the entityId\n    graph.setNode(entityId, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: entityId,\n    });\n  });\n  return firstOne;\n}; // drawEntities\n\nconst adjustEntities = function (svgNode, graph) {\n  graph.nodes().forEach(function (v) {\n    if (v !== undefined && graph.node(v) !== undefined) {\n      svgNode\n        .select('#' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y - graph.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n};\n\n/**\n * Construct a name for an edge based on the names of the 2 entities and the role (relationship)\n * between them. Remove any spaces from it\n *\n * @param rel - A (parsed) relationship (e.g. one of the objects in the list returned by\n *   erDb.getRelationships)\n * @returns {string}\n */\nconst getEdgeName = function (rel) {\n  return (rel.entityA + rel.roleA + rel.entityB).replace(/\\s/g, '');\n};\n\n/**\n * Add each relationship to the graph\n *\n * @param relationships The relationships to be added\n * @param g The graph\n * @returns {Array} The array of relationships\n */\nconst addRelationships = function (relationships, g) {\n  relationships.forEach(function (r) {\n    g.setEdge(\n      entityNameIds.get(r.entityA),\n      entityNameIds.get(r.entityB),\n      { relationship: r },\n      getEdgeName(r)\n    );\n  });\n  return relationships;\n}; // addRelationships\n\nlet relCnt = 0;\n/**\n * Draw a relationship using edge information from the graph\n *\n * @param svg The svg node\n * @param rel The relationship to draw in the svg\n * @param g The graph containing the edge information\n * @param insert The insertion point in the svg DOM (because relationships have markers that need to\n *   sit 'behind' opaque entity boxes)\n * @param diagObj\n */\nconst drawRelationshipFromLayout = function (svg, rel, g, insert, diagObj) {\n  relCnt++;\n\n  // Find the edge relating to this relationship\n  const edge = g.edge(\n    entityNameIds.get(rel.entityA),\n    entityNameIds.get(rel.entityB),\n    getEdgeName(rel)\n  );\n\n  // Get a function that will generate the line path\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  // Insert the line at the right place\n  const svgPath = svg\n    .insert('path', '#' + insert)\n    .classed('er relationshipLine', true)\n    .attr('d', lineFunction(edge.points))\n    .style('stroke', conf.stroke)\n    .style('fill', 'none');\n\n  // ...and with dashes if necessary\n  if (rel.relSpec.relType === diagObj.db.Identification.NON_IDENTIFYING) {\n    svgPath.attr('stroke-dasharray', '8,8');\n  }\n\n  // TODO: Understand this better\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  // Decide which start and end markers it needs. It may be possible to be more concise here\n  // by reversing a start marker to make an end marker...but this will do for now\n\n  // Note that the 'A' entity's marker is at the end of the relationship and the 'B' entity's marker is at the start\n  switch (rel.relSpec.cardA) {\n    case diagObj.db.Cardinality.ZERO_OR_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ZERO_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ONE_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_END + ')');\n      break;\n    case diagObj.db.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_END + ')');\n      break;\n  }\n\n  switch (rel.relSpec.cardB) {\n    case diagObj.db.Cardinality.ZERO_OR_ONE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ZERO_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ONE_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_START + ')'\n      );\n      break;\n    case diagObj.db.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-start', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_START + ')');\n      break;\n  }\n\n  // Now label the relationship\n\n  // Find the half-way point\n  const len = svgPath.node().getTotalLength();\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\n\n  // Append a text node containing the label\n  const labelId = 'rel' + relCnt;\n\n  const labelNode = svg\n    .append('text')\n    .classed('er relationshipLabel', true)\n    .attr('id', labelId)\n    .attr('x', labelPoint.x)\n    .attr('y', labelPoint.y)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-family', getConfig().fontFamily)\n    .style('font-size', conf.fontSize + 'px')\n    .text(rel.roleA);\n\n  // Figure out how big the opaque 'container' rectangle needs to be\n  const labelBBox = labelNode.node().getBBox();\n\n  // Insert the opaque rectangle before the text label\n  svg\n    .insert('rect', '#' + labelId)\n    .classed('er relationshipLabelBox', true)\n    .attr('x', labelPoint.x - labelBBox.width / 2)\n    .attr('y', labelPoint.y - labelBBox.height / 2)\n    .attr('width', labelBBox.width)\n    .attr('height', labelBBox.height);\n};\n\n/**\n * Draw en E-R diagram in the tag with id: id based on the text definition of the diagram\n *\n * @param text The text of the diagram\n * @param id The unique id of the DOM node that contains the diagram\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  conf = getConfig().er;\n  log.info('Drawing ER diagram');\n  //  diag.db.clear();\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  // const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the text to populate erDb\n  // try {\n  //   parser.parse(text);\n  // } catch (err) {\n  //   log.debug('Parsing failed');\n  // }\n\n  // Get a reference to the svg node that contains the text\n  const svg = root.select(`[id='${id}']`);\n\n  // Add cardinality marker definitions to the svg\n  erMarkers.insertMarkers(svg, conf);\n\n  // Now we have to construct the diagram in a specific way:\n  // ---\n  // 1. Create all the entities in the svg node at 0,0, but with the correct dimensions (allowing for text content)\n  // 2. Make sure they are all added to the graph\n  // 3. Add all the edges (relationships) to the graph as well\n  // 4. Let dagre do its magic to lay out the graph.  This assigns:\n  //    - the centre co-ordinates for each node, bearing in mind the dimensions and edge relationships\n  //    - the path co-ordinates for each edge\n  //    But it has no impact on the svg child nodes - the diagram remains with every entity rooted at 0,0\n  // 5. Now assign a transform to each entity in the svg node so that it gets drawn in the correct place, as determined by\n  //    its centre point, which is obtained from the graph, and it's width and height\n  // 6. And finally, create all the edges in the svg node using information from the graph\n  // ---\n\n  // Create the graph\n  let g;\n\n  // TODO: Explore directed vs undirected graphs, and how the layout is affected\n  // An E-R diagram could be said to be undirected, but there is merit in setting\n  // the direction from parent to child in a one-to-many as this influences graphlib to\n  // put the parent above the child (does it?), which is intuitive.  Most relationships\n  // in ER diagrams are one-to-many.\n  g = new graphlib.Graph({\n    multigraph: true,\n    directed: true,\n    compound: false,\n  })\n    .setGraph({\n      rankdir: conf.layoutDirection,\n      marginx: 20,\n      marginy: 20,\n      nodesep: 100,\n      edgesep: 100,\n      ranksep: 100,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  // Draw the entities (at 0,0), returning the first svg node that got\n  // inserted - this represents the insertion point for relationship paths\n  const firstEntity = drawEntities(svg, diagObj.db.getEntities(), g);\n\n  // TODO: externalize the addition of entities to the graph - it's a bit 'buried' in the above\n\n  // Add all the relationships to the graph\n  const relationships = addRelationships(diagObj.db.getRelationships(), g);\n\n  dagreLayout(g); // Node and edge positions will be updated\n\n  // Adjust the positions of the entities so that they adhere to the layout\n  adjustEntities(svg, g);\n\n  // Draw the relationships\n  relationships.forEach(function (rel) {\n    drawRelationshipFromLayout(svg, rel, g, firstEntity, diagObj);\n  });\n\n  const padding = conf.diagramPadding;\n\n  utils.insertTitle(svg, 'entityTitleText', conf.titleTopMargin, diagObj.db.getDiagramTitle());\n\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\n}; // draw\n\n/**\n * UUID namespace for ER diagram IDs\n *\n * This can be generated via running:\n *\n * ```js\n * const { v5: uuid5 } = await import('uuid');\n * uuid5(\n *   'https://mermaid-js.github.io/mermaid/syntax/entityRelationshipDiagram.html',\n *   uuid5.URL\n * );\n * ```\n */\nconst MERMAID_ERDIAGRAM_UUID = '28e9f9db-3c8d-5aa5-9faf-44286ae5937c';\n\n/**\n * Return a unique id based on the given string. Start with the prefix, then a hyphen, then the\n * simplified str, then a hyphen, then a unique uuid based on the str. (Hyphens are only included if needed.)\n * Although the official XML standard for ids says that many more characters are valid in the id,\n * this keeps things simple by accepting only A-Za-z0-9.\n *\n * @param {string} str Given string to use as the basis for the id. Default is `''`\n * @param {string} prefix String to put at the start, followed by '-'. Default is `''`\n * @returns {string}\n * @see https://www.w3.org/TR/xml/#NT-Name\n */\nexport function generateId(str = '', prefix = '') {\n  const simplifiedStr = str.replace(BAD_ID_CHARS_REGEXP, '');\n  // we use `uuid v5` so that UUIDs are consistent given a string.\n  return `${strWithHyphen(prefix)}${strWithHyphen(simplifiedStr)}${uuid5(\n    str,\n    MERMAID_ERDIAGRAM_UUID\n  )}`;\n}\n\n/**\n * Append a hyphen to a string only if the string isn't empty\n *\n * @param {string} str\n * @returns {string}\n * @todo This could be moved into a string utility file/class.\n */\nfunction strWithHyphen(str = '') {\n  return str.length > 0 ? `${str}-` : '';\n}\n\nexport default {\n  setConf,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport erParser from './parser/erDiagram';\nimport erDb from './erDb';\nimport erRenderer from './erRenderer';\nimport erStyles from './styles';\n\nexport const diagram = {\n  parser: erParser,\n  db: erDb,\n  renderer: erRenderer,\n  styles: erStyles,\n};\n","const getStyles = (options) =>\n  `\n  .entityBox {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxOdd {\n    fill: ${options.attributeBackgroundColorOdd};\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxEven {\n    fill:  ${options.attributeBackgroundColorEven};\n    stroke: ${options.nodeBorder};\n  }\n\n  .relationshipLabelBox {\n    fill: ${options.tertiaryColor};\n    opacity: 0.7;\n    background-color: ${options.tertiaryColor};\n      rect {\n        opacity: 0.5;\n      }\n  }\n\n    .relationshipLine {\n      stroke: ${options.lineColor};\n    }\n\n  .entityTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }    \n`;\n\nexport default getStyles;\n"],"names":["byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","uuid","REGEX","validate","TypeError","v","Uint8Array","parseInt","f","s","x","y","z","ROTL","n","bytes","K","H","msg","unescape","encodeURIComponent","length","charCodeAt","Array","isArray","prototype","call","l","N","Math","ceil","M","Uint32Array","j","pow","floor","W","t","a","b","c","d","e","T","v5","name","version","hashfunc","generateUUID","value","namespace","buf","_namespace","str","stringToBytes","parse","set","err","DNS","URL","v35","sha1","o","parser","yy","addEntity","addRelationship","lexer","entities","relationships","attributes","Cardinality","ZERO_OR_ONE","ZERO_OR_MORE","ONE_OR_MORE","ONLY_ONE","Identification","NON_IDENTIFYING","IDENTIFYING","parseDirective","statement","context","type","m","this","getConfig","configApi.getConfig","er","addAttributes","entityName","attribs","entity","attributeName","getEntities","entA","rolA","entB","rSpec","rel","entityA","roleA","entityB","relSpec","getRelationships","clear","commonClear","setAccTitle","getAccTitle","g","setAccDescription","getAccDescription","setDiagramTitle","getDiagramTitle","ERMarkers","ONLY_ONE_START","ONLY_ONE_END","ZERO_OR_ONE_START","ZERO_OR_ONE_END","ONE_OR_MORE_START","ONE_OR_MORE_END","ZERO_OR_MORE_START","ZERO_OR_MORE_END","elem","conf","marker","append","attr","stroke","BAD_ID_CHARS_REGEXP","entityNameIds","Map","drawEntities","svgNode","graph","firstOne","Object","keys","forEach","entityId","prefix","simplifiedStr","replace","strWithHyphen","uuid5","MERMAID_ERDIAGRAM_UUID","generateId","groupNode","textId","textNode","classed","style","fontFamily","fontSize","text","entityTextNode","heightPadding","entityPadding","widthPadding","attrFontSize","labelBBox","node","getBBox","attributeNodes","hasKeyType","hasComment","maxTypeWidth","maxNameWidth","maxKeyWidth","maxCommentWidth","cumulativeHeight","height","attrNum","item","attributeKeyTypeList","attributeComment","attrPrefix","id","nodeHeight","attributeType","p","typeNode","nameNode","attributeNode","tn","nn","typeBBox","nameBBox","max","width","keyTypeNodeText","join","keyTypeNode","kn","keyTypeBBox","commentNode","cn","commentNodeBBox","widthPaddingFactor","maxWidth","bBox","minEntityWidth","minEntityHeight","spareColumnWidth","heightOffset","attribStyle","alignY","typeRect","insert","nameXOffset","parseFloat","nameRect","keyTypeAndCommentXOffset","keyTypeRect","drawAttributes","entityWidth","entityHeight","rectBBox","setNode","shape","getEdgeName","relCnt","diagram","erParser","db","erDb","renderer","setConf","cnf","key","draw","_version","diagObj","sandboxElement","securityLevel","svg","nodes","contentDocument","body","select","erMarkers","graphlib","multigraph","directed","compound","setGraph","rankdir","layoutDirection","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","firstEntity","r","setEdge","get","relationship","addRelationships","dagreLayout","edge","lineFunction","curve","svgPath","points","relType","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","cardA","cardB","len","getTotalLength","labelPoint","getPointAtLength","labelId","drawRelationshipFromLayout","padding","diagramPadding","u","titleTopMargin","svgBounds","useMaxWidth","styles","options","mainBkg","nodeBorder","attributeBackgroundColorOdd","attributeBackgroundColorEven","tertiaryColor","lineColor","textColor"],"sourceRoot":""}