{"version":3,"file":"static/js/174.bceb572c.chunk.js","mappings":"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","sources":["../node_modules/khroma/dist/methods/luminance.js","../node_modules/khroma/dist/methods/is_light.js","../node_modules/khroma/dist/methods/is_dark.js","../node_modules/mermaid/src/diagrams/timeline/parser/timeline.jison","../node_modules/mermaid/src/diagrams/timeline/timelineDb.js","../node_modules/mermaid/src/diagrams/timeline/svgDraw.js","../node_modules/mermaid/src/diagrams/timeline/timelineRenderer.ts","../node_modules/mermaid/src/diagrams/timeline/timeline-definition.ts","../node_modules/mermaid/src/diagrams/timeline/styles.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\n//SOURCE: https://planetcalc.com/7779\nconst luminance = (color) => {\n    const { r, g, b } = Color.parse(color);\n    const luminance = .2126 * _.channel.toLinear(r) + .7152 * _.channel.toLinear(g) + .0722 * _.channel.toLinear(b);\n    return _.lang.round(luminance);\n};\n/* EXPORT */\nexport default luminance;\n","/* IMPORT */\nimport luminance from './luminance.js';\n/* MAIN */\nconst isLight = (color) => {\n    return luminance(color) >= .5;\n};\n/* EXPORT */\nexport default isLight;\n","/* IMPORT */\nimport isLight from './is_light.js';\n/* MAIN */\nconst isDark = (color) => {\n    return !isLight(color);\n};\n/* EXPORT */\nexport default isDark;\n","/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2023 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n%options case-insensitive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n\n// Directive states\n%x open_directive type_directive arg_directive\n\n\n%%\n\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[\\n]+                   return 'NEWLINE';\n\\s+                     /* skip whitespace */\n\\#[^\\n]*                /* skip comments */\n\n\"timeline\"               return 'timeline';\n\"title\"\\s[^#\\n;]+       return 'title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\"section\"\\s[^#:\\n;]+    return 'section';\n\n// event starting with \"==>\" keyword\n\":\"\\s[^#:\\n;]+        return 'event';\n[^#:\\n;]+               return 'period';\n\n\n<<EOF>>                 return 'EOF';\n.                       return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: timeline document 'EOF' { return $2; }\n\t| directive start\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[];}\n\t| EOF { $$=[];}\n\t;\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n  : title {yy.getCommonDb().setDiagramTitle($1.substr(6));$$=$1.substr(6);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.getCommonDb().setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.getCommonDb().setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.getCommonDb().setAccDescription($$); }\n  | section {yy.addSection($1.substr(8));$$=$1.substr(8);}\n  | period_statement\n  | event_statement\n  | directive\n  ;\nperiod_statement\n  : period {yy.addTask($1,0,'');$$=$1;}\n;\nevent_statement\n  : event {yy.addEvent($1.substr(2));$$=$1;}\n;\n\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'timeline'); }\n  ;\n\n%%\n","import { parseDirective as _parseDirective } from '../../directiveUtils';\nimport * as commonDb from '../../commonDb';\nlet currentSection = '';\nlet currentTaskId = 0;\n\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\n\nexport const getCommonDb = () => commonDb;\n\nexport const parseDirective = (statement, context, type) => {\n  _parseDirective(this, statement, context, type);\n};\n\nexport const clear = function () {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = '';\n  rawTasks.length = 0;\n  commonDb.clear();\n};\n\nexport const addSection = function (txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\n\nexport const getSections = function () {\n  return sections;\n};\n\nexport const getTasks = function () {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n\n  tasks.push(...rawTasks);\n\n  return tasks;\n};\n\nexport const addTask = function (period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : [],\n  };\n  rawTasks.push(rawTask);\n};\n\nexport const addEvent = function (event) {\n  // fetch current task with currnetTaskId\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  //add event to the events array\n  currentTask.events.push(event);\n};\n\nexport const addTaskOrg = function (descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: [],\n  };\n  tasks.push(newTask);\n};\n\n/**\n * Compiles the raw tasks into a list of tasks with events\n * @returns {boolean} true if all items are processed\n * @private\n * @memberof timelineDb\n */\nconst compileTasks = function () {\n  const compileTask = function (pos) {\n    return rawTasks[pos].processed;\n  };\n\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\n\nexport default {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent,\n  parseDirective,\n};\n","import { arc as d3arc, select } from 'd3';\nconst MAX_SECTIONS = 12;\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (rectData.class !== undefined) {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\nexport const drawFace = function (element, faceData) {\n  const radius = 15;\n  const circleElement = element\n    .append('circle')\n    .attr('cx', faceData.cx)\n    .attr('cy', faceData.cy)\n    .attr('class', 'face')\n    .attr('r', radius)\n    .attr('stroke-width', 2)\n    .attr('overflow', 'visible');\n\n  const face = element.append('g');\n\n  //left eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx - radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  //right eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx + radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  /** @param {any} face */\n  function smile(face) {\n    const arc = d3arc()\n      .startAngle(Math.PI / 2)\n      .endAngle(3 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 2) + ')');\n  }\n\n  /** @param {any} face */\n  function sad(face) {\n    const arc = d3arc()\n      .startAngle((3 * Math.PI) / 2)\n      .endAngle(5 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 7) + ')');\n  }\n\n  /** @param {any} face */\n  function ambivalent(face) {\n    face\n      .append('line')\n      .attr('class', 'mouth')\n      .attr('stroke', 2)\n      .attr('x1', faceData.cx - 5)\n      .attr('y1', faceData.cy + 7)\n      .attr('x2', faceData.cx + 5)\n      .attr('y2', faceData.cy + 7)\n      .attr('class', 'mouth')\n      .attr('stroke-width', '1px')\n      .attr('stroke', '#666');\n  }\n\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n\n  return circleElement;\n};\n\nexport const drawCircle = function (element, circleData) {\n  const circleElement = element.append('circle');\n  circleElement.attr('cx', circleData.cx);\n  circleElement.attr('cy', circleData.cy);\n  circleElement.attr('class', 'actor-' + circleData.pos);\n  circleElement.attr('fill', circleData.fill);\n  circleElement.attr('stroke', circleData.stroke);\n  circleElement.attr('r', circleData.r);\n\n  if (circleElement.class !== undefined) {\n    circleElement.attr('class', circleElement.class);\n  }\n\n  if (circleData.title !== undefined) {\n    circleElement.append('title').text(circleData.title);\n  }\n\n  return circleElement;\n};\n\nexport const drawText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.attr('class', 'legend');\n\n  textElem.style('text-anchor', textData.anchor);\n\n  if (textData.class !== undefined) {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.text(nText);\n\n  return textElem;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\n\nexport const drawSection = function (elem, section, conf) {\n  const g = elem.append('g');\n\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'journey-section section-type-' + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'journey-section section-type-' + section.num },\n    conf,\n    section.colour\n  );\n};\n\nlet taskCount = -1;\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem The HTML element\n * @param {any} task The task to render\n * @param {any} conf The global configuration\n */\nexport const drawTask = function (elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append('g');\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append('line')\n    .attr('id', 'task' + taskCount)\n    .attr('x1', center)\n    .attr('y1', task.y)\n    .attr('x2', center)\n    .attr('y2', maxHeight)\n    .attr('class', 'task-line')\n    .attr('stroke-width', '1px')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke', '#666');\n\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score,\n  });\n\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'task task-type-' + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  let xPos = task.x + 14;\n  // task.people.forEach((person) => {\n  //   const colour = task.actors[person].color;\n\n  //   const circle = {\n  //     cx: xPos,\n  //     cy: task.y,\n  //     r: 7,\n  //     fill: colour,\n  //     stroke: '#000',\n  //     title: person,\n  //     pos: task.actors[person].position,\n  //   };\n\n  //   drawCircle(g, circle);\n  //   xPos += 10;\n  // });\n\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'task' },\n    conf,\n    task.colour\n  );\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem The html element\n * @param {any} bounds The bounds of the drawing\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    'text-anchor': 'start',\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} colour\n   */\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('font-color', colour)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   * @param {any} colour\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - (taskFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .attr('fill', colour)\n        .style('text-anchor', 'middle')\n        .style('font-size', taskFontSize)\n        .style('font-family', taskFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append('switch');\n    const f = body\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('position', 'fixed');\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .attr('class', 'label')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        // noinspection JSUnfilteredForInLoop\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst initGraphics = function (graphics) {\n  graphics\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 5)\n    .attr('refY', 2)\n    .attr('markerWidth', 6)\n    .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0,0 V 4 L6,2 Z'); // this is actual shape for arrowhead\n};\n\n/**\n * @param {string} text The text to be wrapped\n * @param {number} width The max width of the text\n */\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/(\\s+|<br>)/)\n        .reverse(),\n      word,\n      line = [],\n      lineHeight = 1.1, // ems\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', dy + 'em');\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(' ').trim());\n      if (tspan.node().getComputedTextLength() > width || word === '<br>') {\n        line.pop();\n        tspan.text(line.join(' ').trim());\n        if (word === '<br>') {\n          line = [''];\n        } else {\n          line = [word];\n        }\n\n        tspan = text\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineHeight + 'em')\n          .text(word);\n      }\n    }\n  });\n}\n\nexport const drawNode = function (elem, node, fullSection, conf) {\n  const section = (fullSection % MAX_SECTIONS) - 1;\n  const nodeElem = elem.append('g');\n  node.section = section;\n  nodeElem.attr(\n    'class',\n    (node.class ? node.class + ' ' : '') + 'timeline-node ' + ('section-' + section)\n  );\n  const bkgElem = nodeElem.append('g');\n\n  // Create the wrapped text element\n  const textElem = nodeElem.append('g');\n\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize =\n    conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n\n  textElem.attr('transform', 'translate(' + node.width / 2 + ', ' + node.padding / 2 + ')');\n\n  // Create the background element\n  defaultBkg(bkgElem, node, section, conf);\n\n  return node;\n};\n\nexport const getVirtualNodeHeight = function (elem, node, conf) {\n  const textElem = elem.append('g');\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize =\n    conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + node.type)\n    .attr(\n      'd',\n      `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${\n        node.width - 2 * rd\n      } q5,0 5,5 v${node.height - rd} H0 Z`\n    );\n\n  elem\n    .append('line')\n    .attr('class', 'node-line-' + section)\n    .attr('x1', 0)\n    .attr('y1', node.height)\n    .attr('x2', node.width)\n    .attr('y2', node.height);\n};\n\nexport default {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight,\n};\n","// @ts-nocheck TODO: fix file\nimport { select } from 'd3';\nimport svgDraw from './svgDraw';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\n\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\nexport const draw = function (text, id, version, diagObj) {\n  //1. Fetch the configuration\n  const conf = getConfig();\n  const LEFT_MARGIN = conf.leftMargin ? conf.leftMargin : 50;\n\n  //2. Clear the diagram db before parsing\n  diagObj.db.clear();\n\n  //3. Parse the diagram text\n  diagObj.parser.parse(text + '\\n');\n\n  log.debug('timeline', diagObj.db);\n\n  const securityLevel = conf.securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n\n  const svg = root.select('#' + id);\n\n  svg.append('g');\n\n  //4. Fetch the diagram data\n  const tasks = diagObj.db.getTasks();\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug('task', tasks);\n\n  //5. Initialize the diagram\n  svgDraw.initGraphics(svg);\n\n  // fetch Sections\n  const sections = diagObj.db.getSections();\n  log.debug('sections', sections);\n\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  //let sectionBeginX = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  //sectionBeginX = masterX;\n  let masterY = 50;\n  sectionBeginY = 50;\n  //draw sections\n  let sectionNumber = 0;\n  let hasSections = true;\n\n  //Calculate the max height of the sections\n  sections.forEach(function (section) {\n    const sectionNode = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight,\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug('sectionHeight before draw', sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n\n  //tasks length and maxEventCount\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug('tasks.length', tasks.length);\n  //calculate max task height\n  // for loop till tasks.length\n  for (const [i, task] of tasks.entries()) {\n    const taskNode = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight,\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug('taskHeight before draw', taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n\n    //calculate maxEventCount\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    //calculate maxEventLineLength\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50,\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n\n  log.debug('maxSectionHeight before draw', maxSectionHeight);\n  log.debug('maxTaskHeight before draw', maxTaskHeight);\n\n  if (sections && sections.length > 0) {\n    sections.forEach((section) => {\n      const sectionNode = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 150,\n        padding: 20,\n        maxHeight: maxSectionHeight,\n      };\n      log.debug('sectionNode', sectionNode);\n      const sectionNodeWrapper = svg.append('g');\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug('sectionNode output', node);\n\n      sectionNodeWrapper.attr('transform', `translate(${masterX}, ${sectionBeginY})`);\n\n      masterY += maxSectionHeight + 50;\n\n      //draw tasks for this section\n      //filter task where tasks.section == section\n      const tasksForSection = tasks.filter((task) => task.section === section);\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      // todo replace with total width of section and its tasks\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    //draw tasks\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n\n  // Get BBox of the diagram\n  const box = svg.node().getBBox();\n  log.debug('bounds', box);\n\n  if (title) {\n    svg\n      .append('text')\n      .text(title)\n      .attr('x', box.width / 2 - LEFT_MARGIN)\n      .attr('font-size', '4ex')\n      .attr('font-weight', 'bold')\n      .attr('y', 20);\n  }\n  //5. Draw the diagram\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n\n  const lineWrapper = svg.append('g').attr('class', 'lineWrapper');\n  // Draw activity line\n  lineWrapper\n    .append('line')\n    .attr('x1', LEFT_MARGIN)\n    .attr('y1', depthY) // One section head + one task + margins\n    .attr('x2', box.width + 3 * LEFT_MARGIN) // Subtract stroke width so arrow point is retained\n    .attr('y2', depthY)\n    .attr('stroke-width', 4)\n    .attr('stroke', 'black')\n    .attr('marker-end', 'url(#arrowhead)');\n\n  // Setup the view box and size of the svg element\n  setupGraphViewbox(\n    undefined,\n    svg,\n    conf.timeline.padding ? conf.timeline.padding : 50,\n    conf.timeline.useMaxWidth ? conf.timeline.useMaxWidth : false\n  );\n\n  // addSVGAccessibilityFields(diagObj.db, diagram, id);\n};\n\nexport const drawTasks = function (\n  diagram,\n  tasks,\n  sectionColor,\n  masterX,\n  masterY,\n  maxTaskHeight,\n  conf,\n  maxEventCount,\n  maxEventLineLength,\n  maxSectionHeight,\n  isWithoutSections\n) {\n  // Draw the tasks\n  for (const task of tasks) {\n    // create node from task\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight,\n    };\n\n    log.debug('taskNode', taskNode);\n    // create task wrapper\n    const taskWrapper = diagram.append('g').attr('class', 'taskWrapper');\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    //log task height\n    log.debug('taskHeight after draw', taskHeight);\n    taskWrapper.attr('transform', `translate(${masterX}, ${masterY})`);\n\n    // update max task height\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n\n    // if task has events, draw them\n    if (task.events) {\n      // draw a line between the task and the events\n      const lineWrapper = diagram.append('g').attr('class', 'lineWrapper');\n      let linelength = maxTaskHeight;\n      //add margin to task\n      masterY += 100;\n      linelength =\n        linelength + drawEvents(diagram, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n\n      lineWrapper\n        .append('line')\n        .attr('x1', masterX + 190 / 2)\n        .attr('y1', masterY + maxTaskHeight) // One section head + one task + margins\n        .attr('x2', masterX + 190 / 2) // Subtract stroke width so arrow point is retained\n        .attr(\n          'y2',\n          masterY +\n            maxTaskHeight +\n            (isWithoutSections ? maxTaskHeight : maxSectionHeight) +\n            maxEventLineLength +\n            120\n        )\n        .attr('stroke-width', 2)\n        .attr('stroke', 'black')\n        .attr('marker-end', 'url(#arrowhead)')\n        .attr('stroke-dasharray', '5,5');\n    }\n\n    masterX = masterX + 200;\n    if (isWithoutSections && !getConfig().timeline.disableMulticolor) {\n      sectionColor++;\n    }\n  }\n\n  // reset Y coordinate for next section\n  masterY = masterY - 10;\n};\n\nexport const drawEvents = function (diagram, events, sectionColor, masterX, masterY, conf) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  // Draw the events\n  for (const event of events) {\n    // create node from event\n    const eventNode = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50,\n    };\n\n    //log task node\n    log.debug('eventNode', eventNode);\n    // create event wrapper\n    const eventWrapper = diagram.append('g').attr('class', 'eventWrapper');\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr('transform', `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  // set masterY back to eventBeginY\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/timeline.jison';\nimport * as db from './timelineDb';\nimport renderer from './timelineRenderer';\nimport styles from './styles';\n\nexport const diagram = {\n  db,\n  renderer,\n  parser,\n  styles,\n};\n","import { darken, lighten, isDark } from 'khroma';\n\nconst genSections = (options) => {\n  let sections = '';\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options['lineColor' + i] = options['lineColor' + i] || options['cScaleInv' + i];\n    if (isDark(options['lineColor' + i])) {\n      options['lineColor' + i] = lighten(options['lineColor' + i], 20);\n    } else {\n      options['lineColor' + i] = darken(options['lineColor' + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = '' + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${\n      i - 1\n    } path  {\n      fill: ${options['cScale' + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options['cScaleLabel' + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options['cScaleLabel' + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options['cScale' + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options['cScaleInv' + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options['cScaleLabel' + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\n\nconst getStyles = (options) =>\n  `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nexport default getStyles;\n"],"names":["color","Color","r","g","b","luminance","_","isLight","o","parser","lexer","currentSection","currentTaskId","sections","tasks","rawTasks","getCommonDb","c","parseDirective","statement","context","type","_parseDirective","this","clear","length","commonDb.clear","addSection","txt","push","getSections","getTasks","allItemsProcessed","compileTasks","iterationCount","addTask","period","event","rawTask","id","section","task","score","events","addEvent","find","addTaskOrg","descr","newTask","description","classes","allProcessed","entries","i","processed","byText","content","x","y","width","height","textAttrs","colour","_setTextAttrs","append","attr","style","text","byTspan","conf","taskFontSize","taskFontFamily","lines","split","dy","byFo","body","toText","fromTextAttrsDict","key","wrap","each","word","words","reverse","line","parseFloat","tspan","j","join","trim","node","getComputedTextLength","pop","lineHeight","defaultBkg","elem","graphics","fullSection","nodeElem","class","bkgElem","textElem","bbox","call","getBBox","fontSize","replace","padding","Math","max","maxHeight","remove","drawTasks","diagram","sectionColor","masterX","masterY","maxTaskHeight","maxEventCount","maxEventLineLength","maxSectionHeight","isWithoutSections","taskNode","number","debug","taskWrapper","taskHeight","svgDraw","lineWrapper","drawEvents","timeline","disableMulticolor","maxEventHeight","eventBeginY","eventNode","eventWrapper","eventHeight","db","renderer","setConf","cnf","Object","keys","forEach","draw","version","diagObj","LEFT_MARGIN","leftMargin","parse","sandboxElement","securityLevel","svg","nodes","contentDocument","select","title","getDiagramTitle","depthY","sectionNumber","hasSections","sectionHeight","maxEventLineLengthTemp","sectionNode","sectionNodeWrapper","tasksForSection","filter","box","s","useMaxWidth","styles","options","THEME_COLOR_LIMIT","sw","genSections","git0","gitBranchLabel0"],"sourceRoot":""}