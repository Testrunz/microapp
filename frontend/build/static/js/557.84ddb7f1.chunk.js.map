{"version":3,"file":"static/js/557.84ddb7f1.chunk.js","mappings":"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","sources":["../node_modules/khroma/dist/methods/luminance.js","../node_modules/khroma/dist/methods/is_light.js","../node_modules/khroma/dist/methods/is_dark.js","../node_modules/mermaid/src/diagrams/mindmap/parser/mindmap.jison","../node_modules/mermaid/src/diagrams/mindmap/mindmapDb.js","../node_modules/mermaid/src/diagrams/mindmap/svgDraw.js","../node_modules/mermaid/src/diagrams/mindmap/mindmapRenderer.js","../node_modules/mermaid/src/diagrams/mindmap/mindmap-definition.ts","../node_modules/mermaid/src/diagrams/mindmap/styles.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\n//SOURCE: https://planetcalc.com/7779\nconst luminance = (color) => {\n    const { r, g, b } = Color.parse(color);\n    const luminance = .2126 * _.channel.toLinear(r) + .7152 * _.channel.toLinear(g) + .0722 * _.channel.toLinear(b);\n    return _.lang.round(luminance);\n};\n/* EXPORT */\nexport default luminance;\n","/* IMPORT */\nimport luminance from './luminance.js';\n/* MAIN */\nconst isLight = (color) => {\n    return luminance(color) >= .5;\n};\n/* EXPORT */\nexport default isLight;\n","/* IMPORT */\nimport isLight from './is_light.js';\n/* MAIN */\nconst isDark = (color) => {\n    return !isLight(color);\n};\n/* EXPORT */\nexport default isDark;\n","/** mermaid\n *  https://knsv.github.io/mermaid\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n\n%options case-insensitive\n\n%{\n\t// Pre-lexer code can go here\n%}\n%x NODE\n%x NSTR\n%x ICON\n%x CLASS\n\n%%\n\n\\s*\\%\\%.*          {yy.getLogger().trace('Found comment',yytext);}\n// \\%\\%[^\\n]*\\n                             /* skip comments */\n\"mindmap\"\t\t       return 'MINDMAP';\n\":::\"              { this.begin('CLASS'); }\n<CLASS>.+\t\t\t     { this.popState();return 'CLASS'; }\n<CLASS>\\n\t\t\t\t   { this.popState();}\n// [\\s]*\"::icon(\"   { this.begin('ICON'); }\n\"::icon(\"   { yy.getLogger().trace('Begin icon');this.begin('ICON'); }\n[\\s]+[\\n]     {yy.getLogger().trace('SPACELINE');return 'SPACELINE'                 /* skip all whitespace */    ;}\n[\\n]+               return 'NL';\n<ICON>[^\\)]+\t\t\t { return 'ICON'; }\n<ICON>\\)\t\t\t\t   {yy.getLogger().trace('end icon');this.popState();}\n\"-)\"               { yy.getLogger().trace('Exploding node'); this.begin('NODE');return 'NODE_DSTART'; }\n\"(-\"               { yy.getLogger().trace('Cloud'); this.begin('NODE');return 'NODE_DSTART'; }\n\"))\"               { yy.getLogger().trace('Explosion Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\")\"               { yy.getLogger().trace('Cloud Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\"((\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"{{\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"(\"                { this.begin('NODE');return 'NODE_DSTART'; }\n\"[\"                { this.begin('NODE');return 'NODE_DSTART'; }\n[\\s]+              return 'SPACELIST'                 /* skip all whitespace */    ;\n// !(-\\()            return 'NODE_ID';\n[^\\(\\[\\n\\-\\)\\{\\}]+         return 'NODE_ID';\n<<EOF>>            return 'EOF';\n<NODE>[\"]          { yy.getLogger().trace('Starting NSTR');this.begin(\"NSTR\");}\n<NSTR>[^\"]+        { yy.getLogger().trace('description:', yytext); return \"NODE_DESCR\";}\n<NSTR>[\"]          {this.popState();}\n<NODE>[\\)]\\)         {this.popState();yy.getLogger().trace('node end ))');return \"NODE_DEND\";}\n<NODE>[\\)]         {this.popState();yy.getLogger().trace('node end )');return \"NODE_DEND\";}\n<NODE>[\\]]         {this.popState();yy.getLogger().trace('node end ...',yytext);return \"NODE_DEND\";}\n<NODE>\"}}\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(-\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"-)\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"((\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(\"          {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>[^\\)\\]\\(\\}]+     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n<NODE>.+(?!\\(\\()     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n// [\\[]               return 'NODE_START';\n// .+                 return 'TXT' ;\n\n/lex\n\n%start start\n\n%% /* language grammar */\n\nstart\n// %{\t: info document 'EOF' { return yy; } }\n\t: mindMap\n  |\tspaceLines mindMap\n  ;\n\nspaceLines\n  : SPACELINE\n  | spaceLines SPACELINE\n  | spaceLines NL\n  ;\n\nmindMap\n  : MINDMAP document  { return yy; }\n  | MINDMAP NL document  { return yy; }\n  ;\n\nstop\n  : NL {yy.getLogger().trace('Stop NL ');}\n  | EOF {yy.getLogger().trace('Stop EOF ');}\n  | SPACELINE\n  | stop NL {yy.getLogger().trace('Stop NL2 ');}\n  | stop EOF {yy.getLogger().trace('Stop EOF2 ');}\n  ;\ndocument\n\t: document statement stop\n\t| statement stop\n\t;\n\nstatement\n\t: SPACELIST node       { yy.getLogger().info('Node: ',$2.id);yy.addNode($1.length, $2.id, $2.descr, $2.type);  }\n\t| SPACELIST ICON       { yy.getLogger().trace('Icon: ',$2);yy.decorateNode({icon: $2}); }\n\t| SPACELIST CLASS      { yy.decorateNode({class: $2}); }\n  | SPACELINE { yy.getLogger().trace('SPACELIST');}\n\t| node\t\t\t\t\t       { yy.getLogger().trace('Node: ',$1.id);yy.addNode(0, $1.id, $1.descr, $1.type);  }\n\t| ICON                 { yy.decorateNode({icon: $1}); }\n\t| CLASS                { yy.decorateNode({class: $1}); }\n  | SPACELIST\n\t;\n\n\n\nnode\n  :nodeWithId\n  |nodeWithoutId\n  ;\n\nnodeWithoutId\n  :   NODE_DSTART NODE_DESCR NODE_DEND\n\t      { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $2, descr: $2, type: yy.getType($1, $3) }; }\n  ;\n\nnodeWithId\n\t:  NODE_ID             { $$ = { id: $1, descr: $1, type: yy.nodeType.DEFAULT }; }\n\t|  NODE_ID NODE_DSTART NODE_DESCR NODE_DEND\n\t                       { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $1, descr: $3, type: yy.getType($2, $4) }; }\n\t;\n%%\n","import { getConfig } from '../../config';\nimport { sanitizeText as _sanitizeText } from '../../diagrams/common/common';\nimport { log } from '../../logger';\n\nexport const sanitizeText = (text) => _sanitizeText(text, getConfig());\n\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nexport const clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\n\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  // No parent found\n  return null;\n};\n\nexport const getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nexport const addNode = (level, id, descr, type) => {\n  log.info('addNode', level, id, descr, type);\n  const conf = getConfig();\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id),\n    level,\n    descr: sanitizeText(descr),\n    type,\n    children: [],\n    width: getConfig().mindmap.maxNodeWidth,\n  };\n  switch (node.type) {\n    case nodeType.ROUNDED_RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.HEXAGON:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    default:\n      node.padding = conf.mindmap.padding;\n  }\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    // Keep all nodes in the list\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      // First node, the root\n      nodes.push(node);\n    } else {\n      // Syntax error ... there can only bee one root\n      let error = new Error(\n        'There can be only one root. No parent could be found for (\"' + node.descr + '\")'\n      );\n      error.hash = {\n        text: 'branch ' + name,\n        token: 'branch ' + name,\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: ['\"checkout ' + name + '\"'],\n      };\n      throw error;\n    }\n  }\n};\n\nexport const nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6,\n};\n\nexport const getType = (startStr, endStr) => {\n  log.debug('In get type', startStr, endStr);\n  switch (startStr) {\n    case '[':\n      return nodeType.RECT;\n    case '(':\n      return endStr === ')' ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case '((':\n      return nodeType.CIRCLE;\n    case ')':\n      return nodeType.CLOUD;\n    case '))':\n      return nodeType.BANG;\n    case '{{':\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\n\nexport const setElementForId = (id, element) => {\n  elements[id] = element;\n};\n\nexport const decorateNode = (decoration) => {\n  const node = nodes[nodes.length - 1];\n  if (decoration && decoration.icon) {\n    node.icon = sanitizeText(decoration.icon);\n  }\n  if (decoration && decoration.class) {\n    node.class = sanitizeText(decoration.class);\n  }\n};\n\nexport const type2Str = (type) => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return 'no-border';\n    case nodeType.RECT:\n      return 'rect';\n    case nodeType.ROUNDED_RECT:\n      return 'rounded-rect';\n    case nodeType.CIRCLE:\n      return 'circle';\n    case nodeType.CLOUD:\n      return 'cloud';\n    case nodeType.BANG:\n      return 'bang';\n    case nodeType.HEXAGON:\n      return 'hexgon';\n    default:\n      return 'no-border';\n  }\n};\n\nexport let parseError;\nexport const setErrorHandler = (handler) => {\n  parseError = handler;\n};\n\n// Expose logger to grammar\nexport const getLogger = () => log;\n\nexport const getNodeById = (id) => nodes[id];\nexport const getElementById = (id) => elements[id];\n","import { select } from 'd3';\nimport * as db from './mindmapDb';\nconst MAX_SECTIONS = 12;\n\n/**\n * @param {string} text The text to be wrapped\n * @param {number} width The max width of the text\n */\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/(\\s+|<br>)/)\n        .reverse(),\n      word,\n      line = [],\n      lineHeight = 1.1, // ems\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', dy + 'em');\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(' ').trim());\n      if (tspan.node().getComputedTextLength() > width || word === '<br>') {\n        line.pop();\n        tspan.text(line.join(' ').trim());\n        if (word === '<br>') {\n          line = [''];\n        } else {\n          line = [word];\n        }\n\n        tspan = text\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineHeight + 'em')\n          .text(word);\n      }\n    }\n  });\n}\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${\n        node.width - 2 * rd\n      } q5,0 5,5 v${node.height - rd} H0 Z`\n    );\n\n  elem\n    .append('line')\n    .attr('class', 'node-line-' + section)\n    .attr('x1', 0)\n    .attr('y1', node.height)\n    .attr('x2', node.width)\n    .attr('y2', node.height);\n};\nconst rectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('width', node.width);\n};\nconst cloudBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`\n    );\n};\nconst bangBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`\n    );\n};\nconst circleBkg = function (elem, node) {\n  elem\n    .append('circle')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('r', node.width / 2);\n};\n\n/**\n *\n * @param parent\n * @param w\n * @param h\n * @param points\n * @param node\n */\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + (node.width - w) / 2 + ', ' + h + ')');\n}\n\nconst hexagonBkg = function (elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(elem, w, h, points, node);\n};\n\nconst roundedRectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('rx', node.padding)\n    .attr('ry', node.padding)\n    .attr('width', node.width);\n};\n\n/**\n * @param {object} elem The D3 dom element in which the node is to be added\n * @param {object} node The node to be added\n * @param fullSection\n * @param {object} conf The configuration object\n * @returns {number} The height nodes dom element\n */\nexport const drawNode = function (elem, node, fullSection, conf) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append('g');\n  node.section = section;\n  let sectionClass = 'section-' + section;\n  if (section < 0) {\n    sectionClass += ' section-root';\n  }\n  nodeElem.attr('class', (node.class ? node.class + ' ' : '') + 'mindmap-node ' + sectionClass);\n  const bkgElem = nodeElem.append('g');\n\n  // Create the wrapped text element\n  const textElem = nodeElem.append('g');\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('height', '50px')\n        .attr('width', node.width)\n        .attr('style', 'text-align: center;');\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + node.width / 2 + ', ' + (node.height / 2 - 1.5 * node.padding) + ')'\n      );\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('width', '60px')\n        .attr('height', node.height)\n        .attr('style', 'text-align: center;margin-top:' + heightDiff / 2 + 'px;');\n\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + (25 + node.width / 2) + ', ' + (heightDiff / 2 + node.padding / 2) + ')'\n      );\n    }\n  } else {\n    textElem.attr('transform', 'translate(' + node.width / 2 + ', ' + node.padding / 2 + ')');\n  }\n\n  switch (node.type) {\n    case db.nodeType.DEFAULT:\n      defaultBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.ROUNDED_RECT:\n      roundedRectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.RECT:\n      rectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CIRCLE:\n      bkgElem.attr('transform', 'translate(' + node.width / 2 + ', ' + +node.height / 2 + ')');\n      circleBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CLOUD:\n      cloudBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.BANG:\n      bangBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.HEXAGON:\n      hexagonBkg(bkgElem, node, section, conf);\n      break;\n  }\n\n  // Position the node to its coordinate\n  // if (typeof node.x !== 'undefined' && typeof node.y !== 'undefined') {\n  //   nodeElem.attr('transform', 'translate(' + node.x + ',' + node.y + ')');\n  // }\n  db.setElementForId(node.id, nodeElem);\n  return node.height;\n};\n\nexport const drawEdge = function drawEdge(edgesElem, mindmap, parent, depth, fullSection) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const sx = parent.x + parent.width / 2;\n  const sy = parent.y + parent.height / 2;\n  const ex = mindmap.x + mindmap.width / 2;\n  const ey = mindmap.y + mindmap.height / 2;\n  const mx = ex > sx ? sx + Math.abs(sx - ex) / 2 : sx - Math.abs(sx - ex) / 2;\n  const my = ey > sy ? sy + Math.abs(sy - ey) / 2 : sy - Math.abs(sy - ey) / 2;\n  const qx = ex > sx ? Math.abs(sx - mx) / 2 + sx : -Math.abs(sx - mx) / 2 + sx;\n  const qy = ey > sy ? Math.abs(sy - my) / 2 + sy : -Math.abs(sy - my) / 2 + sy;\n\n  edgesElem\n    .append('path')\n    .attr(\n      'd',\n      parent.direction === 'TB' || parent.direction === 'BT'\n        ? `M${sx},${sy} Q${sx},${qy} ${mx},${my} T${ex},${ey}`\n        : `M${sx},${sy} Q${qx},${sy} ${mx},${my} T${ex},${ey}`\n    )\n    .attr('class', 'edge section-edge-' + section + ' edge-depth-' + depth);\n};\n\nexport const positionNode = function (node) {\n  const nodeElem = db.getElementById(node.id);\n\n  const x = node.x || 0;\n  const y = node.y || 0;\n  // Position the node to its coordinate\n  nodeElem.attr('transform', 'translate(' + x + ',' + y + ')');\n};\n\nexport default { drawNode, positionNode, drawEdge };\n","/** Created by knut on 14-12-11. */\nimport { select } from 'd3';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport svgDraw from './svgDraw';\nimport * as db from './mindmapDb';\n\nlet cytoscape;\n/**\n * @param {any} svg The svg element to draw the diagram onto\n * @param {object} mindmap The mindmap data and hierarchy\n * @param section\n * @param {object} conf The configuration object\n */\nfunction drawNodes(svg, mindmap, section, conf) {\n  svgDraw.drawNode(svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\n\n/**\n * @param edgesEl\n * @param cy\n */\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace('Edge: ', id, data);\n      edgesEl\n        .insert('path')\n        .attr(\n          'd',\n          `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `\n        )\n        .attr('class', 'edge section-edge-' + data.section + ' edge-depth-' + data.depth);\n    }\n  });\n}\n\n/**\n * @param mindmap The mindmap data and hierarchy\n * @param cy\n * @param conf The configuration object\n * @param level\n */\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: 'nodes',\n    data: {\n      id: mindmap.id,\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level: level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type,\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y,\n    },\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach((child) => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: 'edges',\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section,\n        },\n      });\n    });\n  }\n}\n\n/**\n * @param node\n * @param conf\n * @param cy\n */\nasync function layoutMindmap(node, conf) {\n  if (!cytoscape) {\n    cytoscape = (await import('cytoscape')).default;\n    const coseBilkent = (await import('cytoscape-cose-bilkent')).default;\n    // Inject the layout algorithm into cytoscape\n    cytoscape.use(coseBilkent);\n  }\n\n  return new Promise((resolve) => {\n    // Add temporary render element\n    const renderEl = select('body').append('div').attr('id', 'cy').attr('style', 'display:none');\n    const cy = cytoscape({\n      container: document.getElementById('cy'), // container to render in\n      style: [\n        {\n          selector: 'edge',\n          style: {\n            'curve-style': 'bezier',\n          },\n        },\n      ],\n    });\n    // Remove element after layout\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n\n    // Make cytoscape care about the dimensions of the nodes\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return { w: data.width, h: data.height };\n      };\n    });\n\n    cy.layout({\n      name: 'cose-bilkent',\n      quality: 'proof',\n      // headless: true,\n      styleEnabled: false,\n      animate: false,\n    }).run();\n    cy.ready((e) => {\n      log.info('Ready', e);\n      resolve(cy);\n    });\n  });\n}\n/**\n * @param node\n * @param cy\n * @param positionedMindmap\n * @param conf\n */\nfunction positionNodes(cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    svgDraw.positionNode(data);\n    const el = db.getElementById(data.nodeId);\n    log.info('Id:', id, 'Position: (', node.position().x, ', ', node.position().y, ')', data);\n    el.attr(\n      'transform',\n      `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`\n    );\n    el.attr('attr', `apa-${id})`);\n  });\n}\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n * @param {any} version\n * @param diagObj\n */\n\nexport const draw = async (text, id, version, diagObj) => {\n  const conf = getConfig();\n\n  // This is done only for throwing the error if the text is not valid.\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(text);\n\n  log.debug('Renering info diagram\\n' + text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  // Parse the graph definition\n\n  const svg = root.select('#' + id);\n\n  svg.append('g');\n  const mm = diagObj.db.getMindmap();\n\n  // Draw the graph and start with drawing the nodes without proper position\n  // this gives us the size of the nodes and we can set the positions later\n\n  const edgesElem = svg.append('g');\n  edgesElem.attr('class', 'mindmap-edges');\n  const nodesElem = svg.append('g');\n  nodesElem.attr('class', 'mindmap-nodes');\n  drawNodes(nodesElem, mm, -1, conf);\n\n  // Next step is to layout the mindmap, giving each node a position\n\n  const cy = await layoutMindmap(mm, conf);\n\n  // // After this we can draw, first the edges and the then nodes with the correct position\n  drawEdges(edgesElem, cy, conf);\n  positionNodes(cy, conf);\n\n  // Setup the view box and size of the svg element\n  setupGraphViewbox(undefined, svg, conf.mindmap.padding, conf.mindmap.useMaxWidth);\n};\n\nexport default {\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport mindmapParser from './parser/mindmap';\nimport * as mindmapDb from './mindmapDb';\nimport mindmapRenderer from './mindmapRenderer';\nimport mindmapStyles from './styles';\n\nexport const diagram = {\n  db: mindmapDb,\n  renderer: mindmapRenderer,\n  parser: mindmapParser,\n  styles: mindmapStyles,\n};\n","import { darken, lighten, isDark } from 'khroma';\n\nconst genSections = (options) => {\n  let sections = '';\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options['lineColor' + i] = options['lineColor' + i] || options['cScaleInv' + i];\n    if (isDark(options['lineColor' + i])) {\n      options['lineColor' + i] = lighten(options['lineColor' + i], 20);\n    } else {\n      options['lineColor' + i] = darken(options['lineColor' + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = '' + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${\n      i - 1\n    } polygon, .section-${i - 1} path  {\n      fill: ${options['cScale' + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options['cScaleLabel' + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options['cScaleLabel' + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options['cScale' + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options['cScaleInv' + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\n\nconst getStyles = (options) =>\n  `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n`;\nexport default getStyles;\n"],"names":["color","Color","r","g","b","luminance","_","isLight","o","parser","lexer","parseError","sanitizeText","text","_sanitizeText","nodes","cnt","elements","nodeType","DEFAULT","NO_BORDER","ROUNDED_RECT","RECT","CIRCLE","CLOUD","BANG","HEXAGON","setElementForId","id","element","type2Str","type","getElementById","level","descr","l","conf","node","nodeId","children","width","mindmap","maxNodeWidth","padding","parent","i","length","getParent","push","error","Error","hash","name","token","line","loc","first_line","last_line","first_column","last_column","expected","decoration","icon","class","startStr","endStr","handler","wrap","each","word","this","words","split","reverse","y","attr","dy","parseFloat","tspan","append","j","join","trim","getComputedTextLength","pop","lineHeight","cytoscape","elem","fullSection","section","nodeElem","sectionClass","bkgElem","textElem","bbox","call","getBBox","fontSize","replace","height","db.nodeType","orgHeight","Math","max","heightDiff","abs","db.type2Str","defaultBkg","roundedRectBkg","rectBkg","circleBkg","w","h","r1","r2","r3","r4","cloudBkg","bangBkg","m","points","insert","map","d","x","insertPolygonShape","hexagonBkg","db.setElementForId","db.getElementById","drawNodes","svg","svgDraw","forEach","child","index","drawEdges","edgesEl","cy","edges","edge","data","_private","bodyBounds","bounds","rscratch","startX","startY","midX","midY","endX","endY","depth","addNodes","add","group","labelText","position","source","target","layoutMindmap","default","coseBilkent","use","Promise","resolve","renderEl","container","document","style","selector","remove","n","layoutDimensions","layout","quality","styleEnabled","animate","run","ready","e","positionNodes","el","draw","version","diagObj","db","clear","parse","securityLevel","sandboxElement","root","contentDocument","body","select","mm","getMindmap","edgesElem","nodesElem","s","useMaxWidth","diagram","mindmapDb","renderer","mindmapParser","styles","options","sections","THEME_COLOR_LIMIT","sw","genSections","git0","gitBranchLabel0"],"sourceRoot":""}