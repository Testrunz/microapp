{"version":3,"file":"static/js/864.68856865.chunk.js","mappings":"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","sources":["../node_modules/mermaid/src/dagre-wrapper/markers.js","../node_modules/mermaid/src/dagre-wrapper/createLabel.js","../node_modules/mermaid/src/dagre-wrapper/shapes/util.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-ellipse.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-line.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-rect.js","../node_modules/mermaid/src/dagre-wrapper/intersect/index.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-node.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-circle.js","../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-polygon.js","../node_modules/mermaid/src/dagre-wrapper/nodes.js","../node_modules/mermaid/src/dagre-wrapper/shapes/note.js","../node_modules/mermaid/src/dagre-wrapper/edges.js","../node_modules/mermaid/src/diagrams/class/svgDraw.js"],"sourcesContent":["/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst lollipop = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-lollipopStart')\n    .attr('class', 'marker lollipop ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('stroke', 'black')\n    .attr('fill', 'white')\n    .attr('cx', 6)\n    .attr('cy', 7)\n    .attr('r', 6);\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 12 20')\n    .attr('refX', 10)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semantic free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\nimport { decodeEntities } from '../mermaidAPI';\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (const row of rows) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n","import createLabel from '../createLabel';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  // Replace labelText with default value if undefined\n  let labelText;\n  if (node.labelText === undefined) {\n    labelText = '';\n  } else {\n    labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n  }\n\n  const text = label\n    .node()\n    .appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n","/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: https://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n","/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n","const intersectRect = (node, point) => {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // https://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n};\n\nexport default intersectRect;\n","/*\n * Borrowed with love from from dagre-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n","/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n\nexport default intersectNode;\n","import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n","/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","import { select } from 'd3';\nimport { log } from '../logger';\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate } from '../diagrams/common/common';\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst labelRect = (parent, node) => {\n  const { shapeSvg } = labelHelper(parent, node, 'label', true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Hide the rect we are only after the label\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect.attr('width', totalWidth).attr('height', totalHeight);\n  shapeSvg.attr('class', 'label edgeLabel');\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.id;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Position the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n  //\n  // let bbox;\n  // if (evaluate(getConfig().flowchart.htmlLabels)) {\n  //   const div = interfaceLabel.children[0];\n  //   const dv = select(interfaceLabel);\n  //   bbox = div.getBoundingClientRect();\n  //   dv.attr('width', bbox.width);\n  //   dv.attr('height', bbox.height);\n  // }\n  // bbox = labelContainer.getBBox();\n\n  // log.info('Text 2', text2);\n  // const textRows = text2.slice(1, text2.length);\n  // let titleBox = text.getBBox();\n  // const descr = label\n  //   .node()\n  //   .appendChild(createLabel(textRows.join('<br/>'), node.labelStyle, true, true));\n\n  // if (evaluate(getConfig().flowchart.htmlLabels)) {\n  //   const div = descr.children[0];\n  //   const dv = select(descr);\n  //   bbox = div.getBoundingClientRect();\n  //   dv.attr('width', bbox.width);\n  //   dv.attr('height', bbox.height);\n  // }\n  // // bbox = label.getBBox();\n  // // log.info(descr);\n  // select(descr).attr(\n  //   'transform',\n  //   'translate( ' +\n  //     // (titleBox.width - bbox.width) / 2 +\n  //     (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n  //     ', ' +\n  //     (titleBox.height + halfPadding + 5) +\n  //     ')'\n  // );\n  // select(text).attr(\n  //   'transform',\n  //   'translate( ' +\n  //     // (titleBox.width - bbox.width) / 2 +\n  //     (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n  //     ', ' +\n  //     0 +\n  //     ')'\n  // );\n  // // Get the size of the label\n\n  // // Bounding box for title and text\n  // bbox = label.node().getBBox();\n\n  // // Center the label\n  // label.attr(\n  //   'transform',\n  //   'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  // );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  // innerLine\n  //   .attr('class', 'divider')\n  //   .attr('x1', -bbox.width / 2 - halfPadding)\n  //   .attr('x2', bbox.width / 2 + halfPadding)\n  //   .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n  //   .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n  return newEl;\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n","import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger';\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n","import { log } from '../logger';\nimport createLabel from './createLabel';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  // Create the actual text element\n  const labelElement = createLabel(edge.label, edge.labelStyle);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        'Moving label ' + edge.label + ' from (',\n        x,\n        ',',\n        y,\n        ') to (',\n        pos.x,\n        ',',\n        pos.y,\n        ') abc78'\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundary rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last point outside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) {\n        points.push(point);\n      }\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Construct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    case 'invisible':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach((point) => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  // // TODO: Can we load this config only from the rendered graph type?\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-lollipopStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-lollipopEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n","import { line, curveBasis } from 'd3';\nimport utils from '../../utils';\nimport { log } from '../../logger';\nimport { parseGenericTypes } from '../common/common';\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation, conf, diagObj) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return 'aggregation';\n      case diagObj.db.relationType.EXTENSION:\n        return 'extension';\n      case diagObj.db.relationType.COMPOSITION:\n        return 'composition';\n      case diagObj.db.relationType.DEPENDENCY:\n        return 'dependency';\n      case diagObj.db.relationType.LOLLIPOP:\n        return 'lollipop';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'relation');\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  if (relation.relation.lineType == 1) {\n    svgPath.attr('class', 'relation dashed-line');\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr('class', 'relation dotted-line');\n  }\n  if (relation.relation.type1 !== 'none') {\n    svgPath.attr(\n      'marker-start',\n      'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')'\n    );\n  }\n  if (relation.relation.type2 !== 'none') {\n    svgPath.attr(\n      'marker-end',\n      'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')'\n    );\n  }\n\n  let x, y;\n  const l = path.points.length;\n  // Calculate Label position\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== 'none',\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== 'none',\n      path.points,\n      path.points[l - 1]\n    );\n\n    log.debug('cardinality_1_point ' + JSON.stringify(cardinality_1_point));\n    log.debug('cardinality_2_point ' + JSON.stringify(cardinality_2_point));\n\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n\n  if (relation.title !== undefined) {\n    const g = elem.append('g').attr('class', 'classLabel');\n    const label = g\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('fill', 'red')\n      .attr('text-anchor', 'middle')\n      .text(relation.title);\n\n    window.label = label;\n    const bounds = label.node().getBBox();\n\n    g.insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', bounds.x - conf.padding / 2)\n      .attr('y', bounds.y - conf.padding / 2)\n      .attr('width', bounds.width + conf.padding)\n      .attr('height', bounds.height + conf.padding);\n  }\n\n  log.info('Rendering relation ' + JSON.stringify(relation));\n  if (relation.relationTitle1 !== undefined && relation.relationTitle1 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type1')\n      .attr('x', p1_card_x)\n      .attr('y', p1_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== undefined && relation.relationTitle2 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type2')\n      .attr('x', p2_card_x)\n      .attr('y', p2_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle2);\n  }\n\n  edgeCount++;\n};\n\n/**\n * Renders a class diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param classDef\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawClass = function (elem, classDef, conf, diagObj) {\n  log.debug('Rendering class ', classDef, conf);\n\n  const id = classDef.id;\n  const classInfo = {\n    id: id,\n    label: classDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', diagObj.db.lookUpDomId(id)).attr('class', 'classGroup');\n\n  // add title\n  let title;\n  if (classDef.link) {\n    title = g\n      .append('svg:a')\n      .attr('xlink:href', classDef.link)\n      .attr('target', classDef.linkTarget)\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  } else {\n    title = g\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  }\n\n  // add annotations\n  let isFirst = true;\n  classDef.annotations.forEach(function (member) {\n    const titleText2 = title.append('tspan').text('«' + member + '»');\n    if (!isFirst) {\n      titleText2.attr('dy', conf.textHeight);\n    }\n    isFirst = false;\n  });\n\n  let classTitleString = classDef.id;\n\n  if (classDef.type !== undefined && classDef.type !== '') {\n    classTitleString += '<' + classDef.type + '>';\n  }\n\n  const classTitle = title.append('tspan').text(classTitleString).attr('class', 'title');\n\n  // If class has annotations the title needs to have an offset of the text height\n  if (!isFirst) {\n    classTitle.attr('dy', conf.textHeight);\n  }\n\n  const titleHeight = title.node().getBBox().height;\n\n  const membersLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n  const members = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + conf.dividerMargin + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n  classDef.members.forEach(function (member) {\n    addTspan(members, member, isFirst, conf);\n    isFirst = false;\n  });\n\n  const membersBox = members.node().getBBox();\n\n  const methodsLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin + membersBox.height)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n\n  const methods = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n\n  classDef.methods.forEach(function (method) {\n    addTspan(methods, method, isFirst, conf);\n    isFirst = false;\n  });\n\n  const classBox = g.node().getBBox();\n  var cssClassStr = ' ';\n\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(' ');\n  }\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', classBox.width + 2 * conf.padding)\n    .attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin)\n    .attr('class', cssClassStr);\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  title.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  if (classDef.tooltip) {\n    title.insert('title').text(classDef.tooltip);\n  }\n\n  membersLine.attr('x2', rectWidth);\n  methodsLine.attr('x2', rectWidth);\n\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n  return classInfo;\n};\n\n/**\n * Renders a note diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param {{id: string; text: string; class: string;}} note\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawNote = function (elem, note, conf, diagObj) {\n  log.debug('Rendering note ', note, conf);\n\n  const id = note.id;\n  const noteInfo = {\n    id: id,\n    text: note.text,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n\n  // add text\n  let text = g\n    .append('text')\n    .attr('y', conf.textHeight + conf.padding)\n    .attr('x', 0);\n\n  const lines = JSON.parse(`\"${note.text}\"`).split('\\n');\n\n  lines.forEach(function (line) {\n    log.debug(`Adding line: ${line}`);\n    text.append('tspan').text(line).attr('class', 'title').attr('dy', conf.textHeight);\n  });\n\n  const noteBox = g.node().getBBox();\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', noteBox.width + 2 * conf.padding)\n    .attr(\n      'height',\n      noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n    );\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  text.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  noteInfo.width = rectWidth;\n  noteInfo.height =\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n\n  return noteInfo;\n};\n\nexport const parseMember = function (text) {\n  const fieldRegEx = /^([#+~-])?(\\w+)(~\\w+~|\\[])?\\s+(\\w+) *([$*])?$/;\n  const methodRegEx = /^([#+|~-])?(\\w+) *\\( *(.*)\\) *([$*])? *(\\w*[[\\]|~]*\\s*\\w*~?)$/;\n\n  let fieldMatch = text.match(fieldRegEx);\n  let methodMatch = text.match(methodRegEx);\n\n  if (fieldMatch && !methodMatch) {\n    return buildFieldDisplay(fieldMatch);\n  } else if (methodMatch) {\n    return buildMethodDisplay(methodMatch);\n  } else {\n    return buildLegacyDisplay(text);\n  }\n};\n\nconst buildFieldDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let fieldType = parsedText[2] ? parsedText[2].trim() : '';\n    let genericType = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let fieldName = parsedText[4] ? parsedText[4].trim() : '';\n    let classifier = parsedText[5] ? parsedText[5].trim() : '';\n\n    displayText = visibility + fieldType + genericType + ' ' + fieldName;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildMethodDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let methodName = parsedText[2] ? parsedText[2].trim() : '';\n    let parameters = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let classifier = parsedText[4] ? parsedText[4].trim() : '';\n    let returnType = parsedText[5] ? ' : ' + parseGenericTypes(parsedText[5]).trim() : '';\n\n    displayText = visibility + methodName + '(' + parameters + ')' + returnType;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildLegacyDisplay = function (text) {\n  // if for some reason we don't have any match, use old format to parse text\n  let displayText = '';\n  let cssStyle = '';\n  let returnType = '';\n  let methodStart = text.indexOf('(');\n  let methodEnd = text.indexOf(')');\n\n  if (methodStart > 1 && methodEnd > methodStart && methodEnd <= text.length) {\n    let visibility = '';\n    let methodName = '';\n\n    let firstChar = text.substring(0, 1);\n    if (firstChar.match(/\\w/)) {\n      methodName = text.substring(0, methodStart).trim();\n    } else {\n      if (firstChar.match(/[#+~-]/)) {\n        visibility = firstChar;\n      }\n\n      methodName = text.substring(1, methodStart).trim();\n    }\n\n    const parameters = text.substring(methodStart + 1, methodEnd);\n    const classifier = text.substring(methodEnd + 1, 1);\n    cssStyle = parseClassifier(text.substring(methodEnd + 1, methodEnd + 2));\n\n    displayText = visibility + methodName + '(' + parseGenericTypes(parameters.trim()) + ')';\n\n    if (methodEnd < text.length) {\n      returnType = text.substring(methodEnd + 2).trim();\n      if (returnType !== '') {\n        returnType = ' : ' + parseGenericTypes(returnType);\n        displayText += returnType;\n      }\n    }\n  } else {\n    // finally - if all else fails, just send the text back as written (other than parsing for generic types)\n    displayText = parseGenericTypes(text);\n  }\n\n  return {\n    displayText,\n    cssStyle,\n  };\n};\n/**\n * Adds a <tspan> for a member in a diagram\n *\n * @param {SVGElement} textEl The element to append to\n * @param {string} txt The member\n * @param {boolean} isFirst\n * @param {{ padding: string; textHeight: string }} conf The configuration for the member\n */\nconst addTspan = function (textEl, txt, isFirst, conf) {\n  let member = parseMember(txt);\n\n  const tSpan = textEl.append('tspan').attr('x', conf.padding).text(member.displayText);\n\n  if (member.cssStyle !== '') {\n    tSpan.attr('style', member.cssStyle);\n  }\n\n  if (!isFirst) {\n    tSpan.attr('dy', conf.textHeight);\n  }\n};\n\n/**\n * Gives the styles for a classifier\n *\n * @param {'+' | '-' | '#' | '~' | '*' | '$'} classifier The classifier string\n * @returns {string} Styling for the classifier\n */\nconst parseClassifier = function (classifier) {\n  switch (classifier) {\n    case '*':\n      return 'font-style:italic;';\n    case '$':\n      return 'text-decoration:underline;';\n    default:\n      return '';\n  }\n};\n\nexport default {\n  drawClass,\n  drawEdge,\n  drawNote,\n  parseMember,\n};\n"],"names":["markers","extension","elem","type","id","l","append","attr","composition","aggregation","dependency","lollipop","point","style","circle","cross","barb","markerArray","forEach","markerName","_vertexText","isTitle","isNode","vertexText","g","flowchart","htmlLabels","replace","vertexNode","node","dom","styleFn","fo","document","createElementNS","div","label","labelClass","html","labelStyle","addHtmlLabel","d","s","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","labelHelper","parent","_classes","classes","labelText","shapeSvg","insert","domId","text","createLabel","bbox","getBBox","children","dv","getBoundingClientRect","width","height","halfPadding","padding","updateNodeBounds","element","insertPolygonShape","w","h","points","map","x","y","join","intersectEllipse","rx","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","sx","sy","intersect","ellipse","polygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","rect","question","questionElem","applyNodePropertyBorders","borders","totalWidth","totalHeight","strokeDashArray","addBorder","skipBorder","includes","forkJoin","dir","shape","shapes","rhombus","props","propKeys","Set","Object","keys","delete","propKey","labelRect","rectWithTitle","innerLine","text2","flat","title","textRows","slice","titleBox","descr","choice","doublecircle","circleGroup","outerCircle","innerCircle","gap","stadium","hexagon","m","hex","rect_left_inv_arrow","lean_right","el","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","pos","start","end","note","subroutine","fork","class_box","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","str","parsedInfo","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX","lineHeight","nodeElems","insertNode","newEl","target","link","securityLevel","linkTarget","tooltip","class","haveCallback","setNodeElem","clear","positionNode","diff","clusterNode","edgeLabels","terminalLabels","insertEdgeLabel","edge","labelElement","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","positionEdgeLabel","paths","path","updatedPath","originalPath","u","arrowTypeStart","arrowTypeEnd","cutPathAtIntersect","_points","boundryNode","lastPointOutside","isInside","outsideNode","inter","outsidePoint","insidePoint","JSON","stringify","r","Q","R","res","_x","_y","intersection","pointPresent","some","e","insertEdge","clusterDb","diagramType","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","curve","lineData","filter","isNaN","strokeClasses","lineFunction","thickness","pattern","svgPath","url","arrowMarkerAbsolute","state","window","location","protocol","host","pathname","search","edgeCount","parseMember","fieldMatch","match","methodMatch","buildFieldDisplay","buildMethodDisplay","buildLegacyDisplay","visibility","fieldType","genericType","fieldName","classifier","parseClassifier","err","methodName","parameters","returnType","methodStart","indexOf","methodEnd","firstChar","substring","addTspan","textEl","txt","isFirst","conf","member","tSpan","textHeight","drawClass","classDef","diagObj","classInfo","db","lookUpDomId","titleText2","classTitle","titleHeight","membersLine","dividerMargin","membersBox","methodsLine","method","classBox","cssClassStr","cssClasses","rectWidth","childNodes","drawEdge","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","LOLLIPOP","lineType","type1","type2","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","cardinality_1_point","cardinality_2_point","bounds","relationTitle1","relationTitle2","drawNote","noteInfo","lines","parse","line","noteBox"],"sourceRoot":""}