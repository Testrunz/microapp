{"version":3,"file":"static/js/444.2863f936.chunk.js","mappings":"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","sources":["../node_modules/mermaid/src/diagrams/gantt/parser/gantt.jison","../node_modules/mermaid/src/diagrams/gantt/ganttDb.js","../node_modules/mermaid/src/diagrams/gantt/ganttRenderer.js","../node_modules/mermaid/src/diagrams/gantt/ganttDiagram.ts","../node_modules/mermaid/src/diagrams/gantt/styles.js"],"sourcesContent":["/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n\n%options case-insensitive\n\n%x click\n%x href\n%x callbackname\n%x callbackargs\n%x open_directive\n%x type_directive\n%x arg_directive\n%x close_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\n\\%\\%(?!\\{)*[^\\n]*                                               /* skip comments */\n[^\\}]\\%\\%*[^\\n]*                                                /* skip comments */\n\\%\\%*[^\\n]*[\\n]*           /* do nothing */\n\n[\\n]+                   return 'NL';\n\\s+                     /* skip whitespace */\n\\#[^\\n]*                /* skip comments */\n\\%%[^\\n]*               /* skip comments */\n\n/*\n---interactivity command---\n'href' adds a link to the specified task. 'href' can only be specified when the\nline was introduced with 'click'.\n'href \"<link>\"' attaches the specified link to the task that was specified by 'click'.\n*/\n\"href\"[\\s]+[\"]          this.begin(\"href\");\n<href>[\"]               this.popState();\n<href>[^\"]*             return 'href';\n\n/*\n---interactivity command---\n'call' adds a callback to the specified task. 'call' can only be specified when\nthe line was introdcued with 'click'.\n'call <callbackname>(<args>)' attaches the function 'callbackname' with the specified\narguments to the task that was specified by 'click'.\nFunction arguments are optional: 'call <callbackname>()' simply executes 'callbackname' without any arguments.\n*/\n\"call\"[\\s]+             this.begin(\"callbackname\");\n<callbackname>\\([\\s]*\\) this.popState();\n<callbackname>\\(        this.popState(); this.begin(\"callbackargs\");\n<callbackname>[^(]*     return 'callbackname';\n<callbackargs>\\)        this.popState();\n<callbackargs>[^)]*     return 'callbackargs';\n\n/*\n'click' is the keyword to introduce a line that contains interactivity commands.\n'click' must be followed by an existing task-id. All commands are attached to\nthat id.\n'click <id>' can be followed by href or call commands in any desired order\n*/\n\"click\"[\\s]+            this.begin(\"click\");\n<click>[\\s\\n]           this.popState();\n<click>[^\\s\\n]*         return 'click';\n\n\"gantt\"                     return 'gantt';\n\"dateFormat\"\\s[^#\\n;]+      return 'dateFormat';\n\"inclusiveEndDates\"         return 'inclusiveEndDates';\n\"topAxis\"                   return 'topAxis';\n\"axisFormat\"\\s[^#\\n;]+      return 'axisFormat';\n\"tickInterval\"\\s[^#\\n;]+    return 'tickInterval';\n\"includes\"\\s[^#\\n;]+        return 'includes';\n\"excludes\"\\s[^#\\n;]+        return 'excludes';\n\"todayMarker\"\\s[^\\n;]+      return 'todayMarker';\n\\d\\d\\d\\d\"-\"\\d\\d\"-\"\\d\\d      return 'date';\n\"title\"\\s[^#\\n;]+           return 'title';\n\"accDescription\"\\s[^#\\n;]+  return 'accDescription'\n\"section\"\\s[^#:\\n;]+        return 'section';\n[^#:\\n;]+                   return 'taskTxt';\n\":\"[^#\\n;]+                 return 'taskData';\n\":\"                         return ':';\n<<EOF>>                     return 'EOF';\n.                           return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: directive start\n\t| gantt document 'EOF' { return $2; }\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NL { $$=[];}\n\t| EOF { $$=[];}\n\t;\n\nstatement\n  : dateFormat {yy.setDateFormat($1.substr(11));$$=$1.substr(11);}\n  | inclusiveEndDates {yy.enableInclusiveEndDates();$$=$1.substr(18);}\n  | topAxis {yy.TopAxis();$$=$1.substr(8);}\n  | axisFormat {yy.setAxisFormat($1.substr(11));$$=$1.substr(11);}\n  | tickInterval {yy.setTickInterval($1.substr(13));$$=$1.substr(13);}\n  | excludes {yy.setExcludes($1.substr(9));$$=$1.substr(9);}\n  | includes {yy.setIncludes($1.substr(9));$$=$1.substr(9);}\n  | todayMarker {yy.setTodayMarker($1.substr(12));$$=$1.substr(12);}\n  | title {yy.setDiagramTitle($1.substr(6));$$=$1.substr(6);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }  | section {yy.addSection($1.substr(8));$$=$1.substr(8);}\n  | clickStatement\n  | taskTxt taskData {yy.addTask($1,$2);$$='task';}\n  | directive\n  ;\n\ndirective\n    : openDirective typeDirective closeDirective 'NL'\n    | openDirective typeDirective ':' argDirective closeDirective 'NL'\n    ;\n\n/*\nclick allows any combination of href and call.\n*/\nclickStatement\n    : click callbackname                    {$$ = $1;yy.setClickEvent($1, $2, null);}\n    | click callbackname callbackargs       {$$ = $1;yy.setClickEvent($1, $2, $3);}\n\n    | click callbackname href               {$$ = $1;yy.setClickEvent($1, $2, null);yy.setLink($1,$3);}\n    | click callbackname callbackargs href  {$$ = $1;yy.setClickEvent($1, $2, $3);yy.setLink($1,$4);}\n\n    | click href callbackname               {$$ = $1;yy.setClickEvent($1, $3, null);yy.setLink($1,$2);}\n    | click href callbackname callbackargs  {$$ = $1;yy.setClickEvent($1, $3, $4);yy.setLink($1,$2);}\n\n    | click href                            {$$ = $1;yy.setLink($1, $2);}\n    ;\n\nclickStatementDebug\n    : click callbackname                    {$$=$1 + ' ' + $2;}\n    | click callbackname href               {$$=$1 + ' ' + $2 + ' ' + $3;}\n\n    | click callbackname callbackargs       {$$=$1 + ' ' + $2 + ' ' + $3;}\n    | click callbackname callbackargs href  {$$=$1 + ' ' + $2 + ' ' + $3 + ' ' + $4;}\n\n    | click href callbackname               {$$=$1 + ' ' + $2 + ' ' + $3;}\n    | click href callbackname callbackargs  {$$=$1 + ' ' + $2 + ' ' + $3 + ' ' + $4;}\n\n    | click href                            {$$=$1 + ' ' + $2;}\n    ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'gantt'); }\n  ;\n\n%%\n","import moment from 'moment-mini';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\nimport { log } from '../../logger';\nimport * as configApi from '../../config';\nimport utils from '../../utils';\nimport mermaidAPI from '../../mermaidAPI';\n\nimport {\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n  setDiagramTitle,\n  getDiagramTitle,\n} from '../../commonDb';\n\nlet dateFormat = '';\nlet axisFormat = '';\nlet tickInterval = undefined;\nlet todayMarker = '';\nlet includes = [];\nlet excludes = [];\nlet links = {};\nlet sections = [];\nlet tasks = [];\nlet currentSection = '';\nconst tags = ['active', 'done', 'crit', 'milestone'];\nlet funs = [];\nlet inclusiveEndDates = false;\nlet topAxis = false;\n\n// The serial order of the task in the script\nlet lastOrder = 0;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const clear = function () {\n  sections = [];\n  tasks = [];\n  currentSection = '';\n  funs = [];\n  taskCnt = 0;\n  lastTask = undefined;\n  lastTaskID = undefined;\n  rawTasks = [];\n  dateFormat = '';\n  axisFormat = '';\n  tickInterval = undefined;\n  todayMarker = '';\n  includes = [];\n  excludes = [];\n  inclusiveEndDates = false;\n  topAxis = false;\n  lastOrder = 0;\n  links = {};\n  commonClear();\n};\n\nexport const setAxisFormat = function (txt) {\n  axisFormat = txt;\n};\n\nexport const getAxisFormat = function () {\n  return axisFormat;\n};\n\nexport const setTickInterval = function (txt) {\n  tickInterval = txt;\n};\n\nexport const getTickInterval = function () {\n  return tickInterval;\n};\n\nexport const setTodayMarker = function (txt) {\n  todayMarker = txt;\n};\n\nexport const getTodayMarker = function () {\n  return todayMarker;\n};\n\nexport const setDateFormat = function (txt) {\n  dateFormat = txt;\n};\n\nexport const enableInclusiveEndDates = function () {\n  inclusiveEndDates = true;\n};\n\nexport const endDatesAreInclusive = function () {\n  return inclusiveEndDates;\n};\n\nexport const enableTopAxis = function () {\n  topAxis = true;\n};\n\nexport const topAxisEnabled = function () {\n  return topAxis;\n};\n\nexport const getDateFormat = function () {\n  return dateFormat;\n};\n\nexport const setIncludes = function (txt) {\n  includes = txt.toLowerCase().split(/[\\s,]+/);\n};\n\nexport const getIncludes = function () {\n  return includes;\n};\nexport const setExcludes = function (txt) {\n  excludes = txt.toLowerCase().split(/[\\s,]+/);\n};\n\nexport const getExcludes = function () {\n  return excludes;\n};\n\nexport const getLinks = function () {\n  return links;\n};\n\nexport const addSection = function (txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\n\nexport const getSections = function () {\n  return sections;\n};\n\nexport const getTasks = function () {\n  let allItemsPricessed = compileTasks();\n  const maxDepth = 10;\n  let iterationCount = 0;\n  while (!allItemsPricessed && iterationCount < maxDepth) {\n    allItemsPricessed = compileTasks();\n    iterationCount++;\n  }\n\n  tasks = rawTasks;\n\n  return tasks;\n};\n\nexport const isInvalidDate = function (date, dateFormat, excludes, includes) {\n  if (includes.includes(date.format(dateFormat.trim()))) {\n    return false;\n  }\n  if (date.isoWeekday() >= 6 && excludes.includes('weekends')) {\n    return true;\n  }\n  if (excludes.includes(date.format('dddd').toLowerCase())) {\n    return true;\n  }\n  return excludes.includes(date.format(dateFormat.trim()));\n};\n\nconst checkTaskDates = function (task, dateFormat, excludes, includes) {\n  if (!excludes.length || task.manualEndTime) {\n    return;\n  }\n  let startTime = moment(task.startTime, dateFormat, true);\n  startTime.add(1, 'd');\n  let endTime = moment(task.endTime, dateFormat, true);\n  let renderEndTime = fixTaskDates(startTime, endTime, dateFormat, excludes, includes);\n  task.endTime = endTime.toDate();\n  task.renderEndTime = renderEndTime;\n};\n\nconst fixTaskDates = function (startTime, endTime, dateFormat, excludes, includes) {\n  let invalid = false;\n  let renderEndTime = null;\n  while (startTime <= endTime) {\n    if (!invalid) {\n      renderEndTime = endTime.toDate();\n    }\n    invalid = isInvalidDate(startTime, dateFormat, excludes, includes);\n    if (invalid) {\n      endTime.add(1, 'd');\n    }\n    startTime.add(1, 'd');\n  }\n  return renderEndTime;\n};\n\nconst getStartDate = function (prevTime, dateFormat, str) {\n  str = str.trim();\n\n  // Test for after\n  const re = /^after\\s+([\\d\\w- ]+)/;\n  const afterStatement = re.exec(str.trim());\n\n  if (afterStatement !== null) {\n    // check all after ids and take the latest\n    let latestEndingTask = null;\n    afterStatement[1].split(' ').forEach(function (id) {\n      let task = findTaskById(id);\n      if (task !== undefined) {\n        if (!latestEndingTask) {\n          latestEndingTask = task;\n        } else {\n          if (task.endTime > latestEndingTask.endTime) {\n            latestEndingTask = task;\n          }\n        }\n      }\n    });\n\n    if (!latestEndingTask) {\n      const dt = new Date();\n      dt.setHours(0, 0, 0, 0);\n      return dt;\n    } else {\n      return latestEndingTask.endTime;\n    }\n  }\n\n  // Check for actual date set\n  let mDate = moment(str, dateFormat.trim(), true);\n  if (mDate.isValid()) {\n    return mDate.toDate();\n  } else {\n    log.debug('Invalid date:' + str);\n    log.debug('With date format:' + dateFormat.trim());\n    const d = new Date(str);\n    if (d === undefined || isNaN(d.getTime())) {\n      throw new Error('Invalid date:' + str);\n    }\n    return d;\n  }\n};\n\n/**\n * Parse a string as a moment duration.\n *\n * The string have to be compound by a value and a shorthand duration unit. For example `5d`\n * represents 5 days.\n *\n * Shorthand unit supported are:\n *\n * - `y` for years\n * - `M` for months\n * - `w` for weeks\n * - `d` for days\n * - `h` for hours\n * - `s` for seconds\n * - `ms` for milliseconds\n *\n * @param {string} str - A string representing the duration.\n * @returns {moment.Duration} A moment duration, including an invalid moment for invalid input\n *   string.\n */\nconst parseDuration = function (str) {\n  const statement = /^(\\d+(?:\\.\\d+)?)([Mdhmswy]|ms)$/.exec(str.trim());\n  if (statement !== null) {\n    return moment.duration(Number.parseFloat(statement[1]), statement[2]);\n  }\n  return moment.duration.invalid();\n};\n\nconst getEndDate = function (prevTime, dateFormat, str, inclusive = false) {\n  str = str.trim();\n\n  // Check for actual date\n  let mDate = moment(str, dateFormat.trim(), true);\n  if (mDate.isValid()) {\n    if (inclusive) {\n      mDate.add(1, 'd');\n    }\n    return mDate.toDate();\n  }\n\n  const endTime = moment(prevTime);\n  const duration = parseDuration(str);\n  if (duration.isValid()) {\n    endTime.add(duration);\n  }\n  return endTime.toDate();\n};\n\nlet taskCnt = 0;\nconst parseId = function (idStr) {\n  if (idStr === undefined) {\n    taskCnt = taskCnt + 1;\n    return 'task' + taskCnt;\n  }\n  return idStr;\n};\n// id, startDate, endDate\n// id, startDate, length\n// id, after x, endDate\n// id, after x, length\n// startDate, endDate\n// startDate, length\n// after x, endDate\n// after x, length\n// endDate\n// length\n\nconst compileData = function (prevTask, dataStr) {\n  let ds;\n\n  if (dataStr.substr(0, 1) === ':') {\n    ds = dataStr.substr(1, dataStr.length);\n  } else {\n    ds = dataStr;\n  }\n\n  const data = ds.split(',');\n\n  const task = {};\n\n  // Get tags like active, done, crit and milestone\n  getTaskTags(data, task, tags);\n\n  for (let i = 0; i < data.length; i++) {\n    data[i] = data[i].trim();\n  }\n\n  let endTimeData = '';\n  switch (data.length) {\n    case 1:\n      task.id = parseId();\n      task.startTime = prevTask.endTime;\n      endTimeData = data[0];\n      break;\n    case 2:\n      task.id = parseId();\n      task.startTime = getStartDate(undefined, dateFormat, data[0]);\n      endTimeData = data[1];\n      break;\n    case 3:\n      task.id = parseId(data[0]);\n      task.startTime = getStartDate(undefined, dateFormat, data[1]);\n      endTimeData = data[2];\n      break;\n    default:\n  }\n\n  if (endTimeData) {\n    task.endTime = getEndDate(task.startTime, dateFormat, endTimeData, inclusiveEndDates);\n    task.manualEndTime = moment(endTimeData, 'YYYY-MM-DD', true).isValid();\n    checkTaskDates(task, dateFormat, excludes, includes);\n  }\n\n  return task;\n};\n\nconst parseData = function (prevTaskId, dataStr) {\n  let ds;\n  if (dataStr.substr(0, 1) === ':') {\n    ds = dataStr.substr(1, dataStr.length);\n  } else {\n    ds = dataStr;\n  }\n\n  const data = ds.split(',');\n\n  const task = {};\n\n  // Get tags like active, done, crit and milestone\n  getTaskTags(data, task, tags);\n\n  for (let i = 0; i < data.length; i++) {\n    data[i] = data[i].trim();\n  }\n\n  switch (data.length) {\n    case 1:\n      task.id = parseId();\n      task.startTime = {\n        type: 'prevTaskEnd',\n        id: prevTaskId,\n      };\n      task.endTime = {\n        data: data[0],\n      };\n      break;\n    case 2:\n      task.id = parseId();\n      task.startTime = {\n        type: 'getStartDate',\n        startData: data[0],\n      };\n      task.endTime = {\n        data: data[1],\n      };\n      break;\n    case 3:\n      task.id = parseId(data[0]);\n      task.startTime = {\n        type: 'getStartDate',\n        startData: data[1],\n      };\n      task.endTime = {\n        data: data[2],\n      };\n      break;\n    default:\n  }\n\n  return task;\n};\n\nlet lastTask;\nlet lastTaskID;\nlet rawTasks = [];\nconst taskDb = {};\nexport const addTask = function (descr, data) {\n  const rawTask = {\n    section: currentSection,\n    type: currentSection,\n    processed: false,\n    manualEndTime: false,\n    renderEndTime: null,\n    raw: { data: data },\n    task: descr,\n    classes: [],\n  };\n  const taskInfo = parseData(lastTaskID, data);\n  rawTask.raw.startTime = taskInfo.startTime;\n  rawTask.raw.endTime = taskInfo.endTime;\n  rawTask.id = taskInfo.id;\n  rawTask.prevTaskId = lastTaskID;\n  rawTask.active = taskInfo.active;\n  rawTask.done = taskInfo.done;\n  rawTask.crit = taskInfo.crit;\n  rawTask.milestone = taskInfo.milestone;\n  rawTask.order = lastOrder;\n\n  lastOrder++;\n\n  const pos = rawTasks.push(rawTask);\n\n  lastTaskID = rawTask.id;\n  // Store cross ref\n  taskDb[rawTask.id] = pos - 1;\n};\n\nexport const findTaskById = function (id) {\n  const pos = taskDb[id];\n  return rawTasks[pos];\n};\n\nexport const addTaskOrg = function (descr, data) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: [],\n  };\n  const taskInfo = compileData(lastTask, data);\n  newTask.startTime = taskInfo.startTime;\n  newTask.endTime = taskInfo.endTime;\n  newTask.id = taskInfo.id;\n  newTask.active = taskInfo.active;\n  newTask.done = taskInfo.done;\n  newTask.crit = taskInfo.crit;\n  newTask.milestone = taskInfo.milestone;\n  lastTask = newTask;\n  tasks.push(newTask);\n};\n\nconst compileTasks = function () {\n  const compileTask = function (pos) {\n    const task = rawTasks[pos];\n    let startTime = '';\n    switch (rawTasks[pos].raw.startTime.type) {\n      case 'prevTaskEnd': {\n        const prevTask = findTaskById(task.prevTaskId);\n        task.startTime = prevTask.endTime;\n        break;\n      }\n      case 'getStartDate':\n        startTime = getStartDate(undefined, dateFormat, rawTasks[pos].raw.startTime.startData);\n        if (startTime) {\n          rawTasks[pos].startTime = startTime;\n        }\n        break;\n    }\n\n    if (rawTasks[pos].startTime) {\n      rawTasks[pos].endTime = getEndDate(\n        rawTasks[pos].startTime,\n        dateFormat,\n        rawTasks[pos].raw.endTime.data,\n        inclusiveEndDates\n      );\n      if (rawTasks[pos].endTime) {\n        rawTasks[pos].processed = true;\n        rawTasks[pos].manualEndTime = moment(\n          rawTasks[pos].raw.endTime.data,\n          'YYYY-MM-DD',\n          true\n        ).isValid();\n        checkTaskDates(rawTasks[pos], dateFormat, excludes, includes);\n      }\n    }\n\n    return rawTasks[pos].processed;\n  };\n\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\n\n/**\n * Called by parser when a link is found. Adds the URL to the vertex data.\n *\n * @param ids Comma separated list of ids\n * @param _linkStr URL to create a link for\n */\nexport const setLink = function (ids, _linkStr) {\n  let linkStr = _linkStr;\n  if (configApi.getConfig().securityLevel !== 'loose') {\n    linkStr = sanitizeUrl(_linkStr);\n  }\n  ids.split(',').forEach(function (id) {\n    let rawTask = findTaskById(id);\n    if (rawTask !== undefined) {\n      pushFun(id, () => {\n        window.open(linkStr, '_self');\n      });\n      links[id] = linkStr;\n    }\n  });\n  setClass(ids, 'clickable');\n};\n\n/**\n * Called by parser when a special node is found, e.g. a clickable element.\n *\n * @param ids Comma separated list of ids\n * @param className Class to add\n */\nexport const setClass = function (ids, className) {\n  ids.split(',').forEach(function (id) {\n    let rawTask = findTaskById(id);\n    if (rawTask !== undefined) {\n      rawTask.classes.push(className);\n    }\n  });\n};\n\nconst setClickFun = function (id, functionName, functionArgs) {\n  if (configApi.getConfig().securityLevel !== 'loose') {\n    return;\n  }\n  if (functionName === undefined) {\n    return;\n  }\n\n  let argList = [];\n  if (typeof functionArgs === 'string') {\n    /* Splits functionArgs by ',', ignoring all ',' in double quoted strings */\n    argList = functionArgs.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n    for (let i = 0; i < argList.length; i++) {\n      let item = argList[i].trim();\n      /* Removes all double quotes at the start and end of an argument */\n      /* This preserves all starting and ending whitespace inside */\n      if (item.charAt(0) === '\"' && item.charAt(item.length - 1) === '\"') {\n        item = item.substr(1, item.length - 2);\n      }\n      argList[i] = item;\n    }\n  }\n\n  /* if no arguments passed into callback, default to passing in id */\n  if (argList.length === 0) {\n    argList.push(id);\n  }\n\n  let rawTask = findTaskById(id);\n  if (rawTask !== undefined) {\n    pushFun(id, () => {\n      utils.runFunc(functionName, ...argList);\n    });\n  }\n};\n\n/**\n * The callbackFunction is executed in a click event bound to the task with the specified id or the\n * task's assigned text\n *\n * @param id The task's id\n * @param callbackFunction A function to be executed when clicked on the task or the task's text\n */\nconst pushFun = function (id, callbackFunction) {\n  funs.push(\n    function () {\n      // const elem = d3.select(element).select(`[id=\"${id}\"]`)\n      const elem = document.querySelector(`[id=\"${id}\"]`);\n      if (elem !== null) {\n        elem.addEventListener('click', function () {\n          callbackFunction();\n        });\n      }\n    },\n    function () {\n      // const elem = d3.select(element).select(`[id=\"${id}-text\"]`)\n      const elem = document.querySelector(`[id=\"${id}-text\"]`);\n      if (elem !== null) {\n        elem.addEventListener('click', function () {\n          callbackFunction();\n        });\n      }\n    }\n  );\n};\n\n/**\n * Called by parser when a click definition is found. Registers an event handler.\n *\n * @param ids Comma separated list of ids\n * @param functionName Function to be called on click\n * @param functionArgs Function args the function should be called with\n */\nexport const setClickEvent = function (ids, functionName, functionArgs) {\n  ids.split(',').forEach(function (id) {\n    setClickFun(id, functionName, functionArgs);\n  });\n  setClass(ids, 'clickable');\n};\n\n/**\n * Binds all functions previously added to fun (specified through click) to the element\n *\n * @param element\n */\nexport const bindFunctions = function (element) {\n  funs.forEach(function (fun) {\n    fun(element);\n  });\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().gantt,\n  clear,\n  setDateFormat,\n  getDateFormat,\n  enableInclusiveEndDates,\n  endDatesAreInclusive,\n  enableTopAxis,\n  topAxisEnabled,\n  setAxisFormat,\n  getAxisFormat,\n  setTickInterval,\n  getTickInterval,\n  setTodayMarker,\n  getTodayMarker,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  findTaskById,\n  addTaskOrg,\n  setIncludes,\n  getIncludes,\n  setExcludes,\n  getExcludes,\n  setClickEvent,\n  setLink,\n  getLinks,\n  bindFunctions,\n  parseDuration,\n  isInvalidDate,\n};\n\n/**\n * @param data\n * @param task\n * @param tags\n */\nfunction getTaskTags(data, task, tags) {\n  let matchFound = true;\n  while (matchFound) {\n    matchFound = false;\n    tags.forEach(function (t) {\n      const pattern = '^\\\\s*' + t + '\\\\s*$';\n      const regex = new RegExp(pattern);\n      if (data[0].match(regex)) {\n        task[t] = true;\n        data.shift(1);\n        matchFound = true;\n      }\n    });\n  }\n}\n","import moment from 'moment-mini';\nimport { log } from '../../logger';\nimport {\n  select,\n  scaleTime,\n  min,\n  max,\n  scaleLinear,\n  interpolateHcl,\n  axisBottom,\n  axisTop,\n  timeFormat,\n  timeMinute,\n  timeHour,\n  timeDay,\n  timeWeek,\n  timeMonth,\n} from 'd3';\nimport common from '../common/common';\nimport { getConfig } from '../../config';\nimport { configureSvgSize } from '../../setupGraphViewbox';\n\nexport const setConf = function () {\n  log.debug('Something is calling, setConf, remove the call');\n};\n\nlet w;\nexport const draw = function (text, id, version, diagObj) {\n  const conf = getConfig().gantt;\n  // diagObj.db.clear();\n  // parser.parse(text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  const elem = doc.getElementById(id);\n  w = elem.parentElement.offsetWidth;\n\n  if (w === undefined) {\n    w = 1200;\n  }\n\n  if (conf.useWidth !== undefined) {\n    w = conf.useWidth;\n  }\n\n  const taskArray = diagObj.db.getTasks();\n\n  // Set height based on number of tasks\n  const h = taskArray.length * (conf.barHeight + conf.barGap) + 2 * conf.topPadding;\n\n  // Set viewBox\n  elem.setAttribute('viewBox', '0 0 ' + w + ' ' + h);\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Set timescale\n  const timeScale = scaleTime()\n    .domain([\n      min(taskArray, function (d) {\n        return d.startTime;\n      }),\n      max(taskArray, function (d) {\n        return d.endTime;\n      }),\n    ])\n    .rangeRound([0, w - conf.leftPadding - conf.rightPadding]);\n\n  let categories = [];\n\n  for (const element of taskArray) {\n    categories.push(element.type);\n  }\n\n  const catsUnfiltered = categories; // for vert labels\n\n  categories = checkUnique(categories);\n\n  /**\n   * @param a\n   * @param b\n   */\n  function taskCompare(a, b) {\n    const taskA = a.startTime;\n    const taskB = b.startTime;\n    let result = 0;\n    if (taskA > taskB) {\n      result = 1;\n    } else if (taskA < taskB) {\n      result = -1;\n    }\n    return result;\n  }\n\n  // Sort the task array using the above taskCompare() so that\n  // tasks are created based on their order of startTime\n  taskArray.sort(taskCompare);\n\n  makeGant(taskArray, w, h);\n\n  configureSvgSize(svg, h, w, conf.useMaxWidth);\n\n  svg\n    .append('text')\n    .text(diagObj.db.getDiagramTitle())\n    .attr('x', w / 2)\n    .attr('y', conf.titleTopMargin)\n    .attr('class', 'titleText');\n\n  /**\n   * @param tasks\n   * @param pageWidth\n   * @param pageHeight\n   */\n  function makeGant(tasks, pageWidth, pageHeight) {\n    const barHeight = conf.barHeight;\n    const gap = barHeight + conf.barGap;\n    const topPadding = conf.topPadding;\n    const leftPadding = conf.leftPadding;\n\n    const colorScale = scaleLinear()\n      .domain([0, categories.length])\n      .range(['#00B9FA', '#F95002'])\n      .interpolate(interpolateHcl);\n\n    drawExcludeDays(\n      gap,\n      topPadding,\n      leftPadding,\n      pageWidth,\n      pageHeight,\n      tasks,\n      diagObj.db.getExcludes(),\n      diagObj.db.getIncludes()\n    );\n    makeGrid(leftPadding, topPadding, pageWidth, pageHeight);\n    drawRects(tasks, gap, topPadding, leftPadding, barHeight, colorScale, pageWidth, pageHeight);\n    vertLabels(gap, topPadding, leftPadding, barHeight, colorScale);\n    drawToday(leftPadding, topPadding, pageWidth, pageHeight);\n  }\n\n  /**\n   * @param theArray\n   * @param theGap\n   * @param theTopPad\n   * @param theSidePad\n   * @param theBarHeight\n   * @param theColorScale\n   * @param w\n   */\n  function drawRects(theArray, theGap, theTopPad, theSidePad, theBarHeight, theColorScale, w) {\n    // Draw background rects covering the entire width of the graph, these form the section rows.\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(theArray)\n      .enter()\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + theTopPad - 2;\n      })\n      .attr('width', function () {\n        return w - conf.rightPadding / 2;\n      })\n      .attr('height', theGap)\n      .attr('class', function (d) {\n        for (const [i, category] of categories.entries()) {\n          if (d.type === category) {\n            return 'section section' + (i % conf.numberSectionStyles);\n          }\n        }\n        return 'section section0';\n      });\n\n    // Draw the rects representing the tasks\n    const rectangles = svg.append('g').selectAll('rect').data(theArray).enter();\n\n    const links = diagObj.db.getLinks();\n\n    // Render the tasks with links\n    // Render the other tasks\n    rectangles\n      .append('rect')\n      .attr('id', function (d) {\n        return d.id;\n      })\n      .attr('rx', 3)\n      .attr('ry', 3)\n      .attr('x', function (d) {\n        if (d.milestone) {\n          return (\n            timeScale(d.startTime) +\n            theSidePad +\n            0.5 * (timeScale(d.endTime) - timeScale(d.startTime)) -\n            0.5 * theBarHeight\n          );\n        }\n        return timeScale(d.startTime) + theSidePad;\n      })\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + theTopPad;\n      })\n      .attr('width', function (d) {\n        if (d.milestone) {\n          return theBarHeight;\n        }\n        return timeScale(d.renderEndTime || d.endTime) - timeScale(d.startTime);\n      })\n      .attr('height', theBarHeight)\n      .attr('transform-origin', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n\n        return (\n          (\n            timeScale(d.startTime) +\n            theSidePad +\n            0.5 * (timeScale(d.endTime) - timeScale(d.startTime))\n          ).toString() +\n          'px ' +\n          (i * theGap + theTopPad + 0.5 * theBarHeight).toString() +\n          'px'\n        );\n      })\n      .attr('class', function (d) {\n        const res = 'task';\n\n        let classStr = '';\n        if (d.classes.length > 0) {\n          classStr = d.classes.join(' ');\n        }\n\n        let secNum = 0;\n        for (const [i, category] of categories.entries()) {\n          if (d.type === category) {\n            secNum = i % conf.numberSectionStyles;\n          }\n        }\n\n        let taskClass = '';\n        if (d.active) {\n          if (d.crit) {\n            taskClass += ' activeCrit';\n          } else {\n            taskClass = ' active';\n          }\n        } else if (d.done) {\n          if (d.crit) {\n            taskClass = ' doneCrit';\n          } else {\n            taskClass = ' done';\n          }\n        } else {\n          if (d.crit) {\n            taskClass += ' crit';\n          }\n        }\n\n        if (taskClass.length === 0) {\n          taskClass = ' task';\n        }\n\n        if (d.milestone) {\n          taskClass = ' milestone ' + taskClass;\n        }\n\n        taskClass += secNum;\n\n        taskClass += ' ' + classStr;\n\n        return res + taskClass;\n      });\n\n    // Append task labels\n    rectangles\n      .append('text')\n      .attr('id', function (d) {\n        return d.id + '-text';\n      })\n      .text(function (d) {\n        return d.task;\n      })\n      .attr('font-size', conf.fontSize)\n      .attr('x', function (d) {\n        let startX = timeScale(d.startTime);\n        let endX = timeScale(d.renderEndTime || d.endTime);\n        if (d.milestone) {\n          startX += 0.5 * (timeScale(d.endTime) - timeScale(d.startTime)) - 0.5 * theBarHeight;\n        }\n        if (d.milestone) {\n          endX = startX + theBarHeight;\n        }\n        const textWidth = this.getBBox().width;\n\n        // Check id text width > width of rectangle\n        if (textWidth > endX - startX) {\n          if (endX + textWidth + 1.5 * conf.leftPadding > w) {\n            return startX + theSidePad - 5;\n          } else {\n            return endX + theSidePad + 5;\n          }\n        } else {\n          return (endX - startX) / 2 + startX + theSidePad;\n        }\n      })\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + conf.barHeight / 2 + (conf.fontSize / 2 - 2) + theTopPad;\n      })\n      .attr('text-height', theBarHeight)\n      .attr('class', function (d) {\n        const startX = timeScale(d.startTime);\n        let endX = timeScale(d.endTime);\n        if (d.milestone) {\n          endX = startX + theBarHeight;\n        }\n        const textWidth = this.getBBox().width;\n\n        let classStr = '';\n        if (d.classes.length > 0) {\n          classStr = d.classes.join(' ');\n        }\n\n        let secNum = 0;\n        for (const [i, category] of categories.entries()) {\n          if (d.type === category) {\n            secNum = i % conf.numberSectionStyles;\n          }\n        }\n\n        let taskType = '';\n        if (d.active) {\n          if (d.crit) {\n            taskType = 'activeCritText' + secNum;\n          } else {\n            taskType = 'activeText' + secNum;\n          }\n        }\n\n        if (d.done) {\n          if (d.crit) {\n            taskType = taskType + ' doneCritText' + secNum;\n          } else {\n            taskType = taskType + ' doneText' + secNum;\n          }\n        } else {\n          if (d.crit) {\n            taskType = taskType + ' critText' + secNum;\n          }\n        }\n\n        if (d.milestone) {\n          taskType += ' milestoneText';\n        }\n\n        // Check id text width > width of rectangle\n        if (textWidth > endX - startX) {\n          if (endX + textWidth + 1.5 * conf.leftPadding > w) {\n            return classStr + ' taskTextOutsideLeft taskTextOutside' + secNum + ' ' + taskType;\n          } else {\n            return (\n              classStr +\n              ' taskTextOutsideRight taskTextOutside' +\n              secNum +\n              ' ' +\n              taskType +\n              ' width-' +\n              textWidth\n            );\n          }\n        } else {\n          return classStr + ' taskText taskText' + secNum + ' ' + taskType + ' width-' + textWidth;\n        }\n      });\n\n    const securityLevel = getConfig().securityLevel;\n\n    // Wrap the tasks in an a tag for working links without javascript\n    if (securityLevel === 'sandbox') {\n      let sandboxElement;\n      sandboxElement = select('#i' + id);\n      const doc = sandboxElement.nodes()[0].contentDocument;\n\n      rectangles\n        .filter(function (d) {\n          return links[d.id] !== undefined;\n        })\n        .each(function (o) {\n          var taskRect = doc.querySelector('#' + o.id);\n          var taskText = doc.querySelector('#' + o.id + '-text');\n          const oldParent = taskRect.parentNode;\n          var Link = doc.createElement('a');\n          Link.setAttribute('xlink:href', links[o.id]);\n          Link.setAttribute('target', '_top');\n          oldParent.appendChild(Link);\n          Link.appendChild(taskRect);\n          Link.appendChild(taskText);\n        });\n    }\n  }\n  /**\n   * @param theGap\n   * @param theTopPad\n   * @param theSidePad\n   * @param w\n   * @param h\n   * @param tasks\n   * @param excludes\n   * @param includes\n   */\n  function drawExcludeDays(theGap, theTopPad, theSidePad, w, h, tasks, excludes, includes) {\n    const minTime = tasks.reduce(\n      (min, { startTime }) => (min ? Math.min(min, startTime) : startTime),\n      0\n    );\n    const maxTime = tasks.reduce((max, { endTime }) => (max ? Math.max(max, endTime) : endTime), 0);\n    const dateFormat = diagObj.db.getDateFormat();\n    if (!minTime || !maxTime) {\n      return;\n    }\n\n    const excludeRanges = [];\n    let range = null;\n    let d = moment(minTime);\n    while (d.valueOf() <= maxTime) {\n      if (diagObj.db.isInvalidDate(d, dateFormat, excludes, includes)) {\n        if (!range) {\n          range = {\n            start: d.clone(),\n            end: d.clone(),\n          };\n        } else {\n          range.end = d.clone();\n        }\n      } else {\n        if (range) {\n          excludeRanges.push(range);\n          range = null;\n        }\n      }\n      d.add(1, 'd');\n    }\n\n    const rectangles = svg.append('g').selectAll('rect').data(excludeRanges).enter();\n\n    rectangles\n      .append('rect')\n      .attr('id', function (d) {\n        return 'exclude-' + d.start.format('YYYY-MM-DD');\n      })\n      .attr('x', function (d) {\n        return timeScale(d.start) + theSidePad;\n      })\n      .attr('y', conf.gridLineStartPadding)\n      .attr('width', function (d) {\n        const renderEnd = d.end.clone().add(1, 'day');\n        return timeScale(renderEnd) - timeScale(d.start);\n      })\n      .attr('height', h - theTopPad - conf.gridLineStartPadding)\n      .attr('transform-origin', function (d, i) {\n        return (\n          (\n            timeScale(d.start) +\n            theSidePad +\n            0.5 * (timeScale(d.end) - timeScale(d.start))\n          ).toString() +\n          'px ' +\n          (i * theGap + 0.5 * h).toString() +\n          'px'\n        );\n      })\n      .attr('class', 'exclude-range');\n  }\n\n  /**\n   * @param theSidePad\n   * @param theTopPad\n   * @param w\n   * @param h\n   */\n  function makeGrid(theSidePad, theTopPad, w, h) {\n    let bottomXAxis = axisBottom(timeScale)\n      .tickSize(-h + theTopPad + conf.gridLineStartPadding)\n      .tickFormat(timeFormat(diagObj.db.getAxisFormat() || conf.axisFormat || '%Y-%m-%d'));\n\n    const reTickInterval = /^([1-9]\\d*)(minute|hour|day|week|month)$/;\n    const resultTickInterval = reTickInterval.exec(\n      diagObj.db.getTickInterval() || conf.tickInterval\n    );\n\n    if (resultTickInterval !== null) {\n      const every = resultTickInterval[1];\n      const interval = resultTickInterval[2];\n      switch (interval) {\n        case 'minute':\n          bottomXAxis.ticks(timeMinute.every(every));\n          break;\n        case 'hour':\n          bottomXAxis.ticks(timeHour.every(every));\n          break;\n        case 'day':\n          bottomXAxis.ticks(timeDay.every(every));\n          break;\n        case 'week':\n          bottomXAxis.ticks(timeWeek.every(every));\n          break;\n        case 'month':\n          bottomXAxis.ticks(timeMonth.every(every));\n          break;\n      }\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + theSidePad + ', ' + (h - 50) + ')')\n      .call(bottomXAxis)\n      .selectAll('text')\n      .style('text-anchor', 'middle')\n      .attr('fill', '#000')\n      .attr('stroke', 'none')\n      .attr('font-size', 10)\n      .attr('dy', '1em');\n\n    if (diagObj.db.topAxisEnabled() || conf.topAxis) {\n      let topXAxis = axisTop(timeScale)\n        .tickSize(-h + theTopPad + conf.gridLineStartPadding)\n        .tickFormat(timeFormat(diagObj.db.getAxisFormat() || conf.axisFormat || '%Y-%m-%d'));\n\n      if (resultTickInterval !== null) {\n        const every = resultTickInterval[1];\n        const interval = resultTickInterval[2];\n        switch (interval) {\n          case 'minute':\n            topXAxis.ticks(timeMinute.every(every));\n            break;\n          case 'hour':\n            topXAxis.ticks(timeHour.every(every));\n            break;\n          case 'day':\n            topXAxis.ticks(timeDay.every(every));\n            break;\n          case 'week':\n            topXAxis.ticks(timeWeek.every(every));\n            break;\n          case 'month':\n            topXAxis.ticks(timeMonth.every(every));\n            break;\n        }\n      }\n\n      svg\n        .append('g')\n        .attr('class', 'grid')\n        .attr('transform', 'translate(' + theSidePad + ', ' + theTopPad + ')')\n        .call(topXAxis)\n        .selectAll('text')\n        .style('text-anchor', 'middle')\n        .attr('fill', '#000')\n        .attr('stroke', 'none')\n        .attr('font-size', 10);\n      // .attr('dy', '1em');\n    }\n  }\n\n  /**\n   * @param theGap\n   * @param theTopPad\n   */\n  function vertLabels(theGap, theTopPad) {\n    const numOccurances = [];\n    let prevGap = 0;\n\n    for (const [i, category] of categories.entries()) {\n      numOccurances[i] = [category, getCount(category, catsUnfiltered)];\n    }\n\n    svg\n      .append('g') // without doing this, impossible to put grid lines behind text\n      .selectAll('text')\n      .data(numOccurances)\n      .enter()\n      .append(function (d) {\n        const rows = d[0].split(common.lineBreakRegex);\n        const dy = -(rows.length - 1) / 2;\n\n        const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        svgLabel.setAttribute('dy', dy + 'em');\n\n        for (const [j, row] of rows.entries()) {\n          const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n          tspan.setAttribute('alignment-baseline', 'central');\n          tspan.setAttribute('x', '10');\n          if (j > 0) {\n            tspan.setAttribute('dy', '1em');\n          }\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        return svgLabel;\n      })\n      .attr('x', 10)\n      .attr('y', function (d, i) {\n        if (i > 0) {\n          for (let j = 0; j < i; j++) {\n            prevGap += numOccurances[i - 1][1];\n            return (d[1] * theGap) / 2 + prevGap * theGap + theTopPad;\n          }\n        } else {\n          return (d[1] * theGap) / 2 + theTopPad;\n        }\n      })\n      .attr('font-size', conf.sectionFontSize)\n      .attr('font-size', conf.sectionFontSize)\n      .attr('class', function (d) {\n        for (const [i, category] of categories.entries()) {\n          if (d[0] === category) {\n            return 'sectionTitle sectionTitle' + (i % conf.numberSectionStyles);\n          }\n        }\n        return 'sectionTitle';\n      });\n  }\n\n  /**\n   * @param theSidePad\n   * @param theTopPad\n   * @param w\n   * @param h\n   */\n  function drawToday(theSidePad, theTopPad, w, h) {\n    const todayMarker = diagObj.db.getTodayMarker();\n    if (todayMarker === 'off') {\n      return;\n    }\n\n    const todayG = svg.append('g').attr('class', 'today');\n    const today = new Date();\n    const todayLine = todayG.append('line');\n\n    todayLine\n      .attr('x1', timeScale(today) + theSidePad)\n      .attr('x2', timeScale(today) + theSidePad)\n      .attr('y1', conf.titleTopMargin)\n      .attr('y2', h - conf.titleTopMargin)\n      .attr('class', 'today');\n\n    if (todayMarker !== '') {\n      todayLine.attr('style', todayMarker.replace(/,/g, ';'));\n    }\n  }\n\n  /**\n   * From this stack exchange question:\n   * http://stackoverflow.com/questions/1890203/unique-for-arrays-in-javascript\n   *\n   * @param arr\n   */\n  function checkUnique(arr) {\n    const hash = {};\n    const result = [];\n    for (let i = 0, l = arr.length; i < l; ++i) {\n      if (!Object.prototype.hasOwnProperty.call(hash, arr[i])) {\n        // it works with objects! in FF, at least\n        hash[arr[i]] = true;\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * From this stack exchange question:\n   * http://stackoverflow.com/questions/14227981/count-how-many-strings-in-an-array-have-duplicates-in-the-same-array\n   *\n   * @param arr\n   */\n  function getCounts(arr) {\n    let i = arr.length; // const to loop over\n    const obj = {}; // obj to store results\n    while (i) {\n      obj[arr[--i]] = (obj[arr[i]] || 0) + 1; // count occurrences\n    }\n    return obj;\n  }\n\n  /**\n   * Get specific from everything\n   *\n   * @param word\n   * @param arr\n   */\n  function getCount(word, arr) {\n    return getCounts(arr)[word] || 0;\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport ganttParser from './parser/gantt';\nimport ganttDb from './ganttDb';\nimport ganttRenderer from './ganttRenderer';\nimport ganttStyles from './styles';\nimport { DiagramDefinition } from '../../diagram-api/types';\n\nexport const diagram: DiagramDefinition = {\n  parser: ganttParser,\n  db: ganttDb,\n  renderer: ganttRenderer,\n  styles: ganttStyles,\n};\n","const getStyles = (options) =>\n  `\n  .mermaid-main-font {\n    font-family: \"trebuchet ms\", verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  .exclude-range {\n    fill: ${options.excludeBkgColor};\n  }\n\n  .section {\n    stroke: none;\n    opacity: 0.2;\n  }\n\n  .section0 {\n    fill: ${options.sectionBkgColor};\n  }\n\n  .section2 {\n    fill: ${options.sectionBkgColor2};\n  }\n\n  .section1,\n  .section3 {\n    fill: ${options.altSectionBkgColor};\n    opacity: 0.2;\n  }\n\n  .sectionTitle0 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle1 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle2 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle3 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle {\n    text-anchor: start;\n    // font-size: ${options.ganttFontSize};\n    // text-height: 14px;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n\n  }\n\n\n  /* Grid and axis */\n\n  .grid .tick {\n    stroke: ${options.gridColor};\n    opacity: 0.8;\n    shape-rendering: crispEdges;\n    text {\n      font-family: ${options.fontFamily};\n      fill: ${options.textColor};\n    }\n  }\n\n  .grid path {\n    stroke-width: 0;\n  }\n\n\n  /* Today line */\n\n  .today {\n    fill: none;\n    stroke: ${options.todayLineColor};\n    stroke-width: 2px;\n  }\n\n\n  /* Task styling */\n\n  /* Default task */\n\n  .task {\n    stroke-width: 2;\n  }\n\n  .taskText {\n    text-anchor: middle;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n\n  // .taskText:not([font-size]) {\n  //   font-size: ${options.ganttFontSize};\n  // }\n\n  .taskTextOutsideRight {\n    fill: ${options.taskTextDarkColor};\n    text-anchor: start;\n    // font-size: ${options.ganttFontSize};\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n\n  }\n\n  .taskTextOutsideLeft {\n    fill: ${options.taskTextDarkColor};\n    text-anchor: end;\n    // font-size: ${options.ganttFontSize};\n  }\n\n  /* Special case clickable */\n  .task.clickable {\n    cursor: pointer;\n  }\n  .taskText.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  .taskTextOutsideLeft.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  .taskTextOutsideRight.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  /* Specific task settings for the sections*/\n\n  .taskText0,\n  .taskText1,\n  .taskText2,\n  .taskText3 {\n    fill: ${options.taskTextColor};\n  }\n\n  .task0,\n  .task1,\n  .task2,\n  .task3 {\n    fill: ${options.taskBkgColor};\n    stroke: ${options.taskBorderColor};\n  }\n\n  .taskTextOutside0,\n  .taskTextOutside2\n  {\n    fill: ${options.taskTextOutsideColor};\n  }\n\n  .taskTextOutside1,\n  .taskTextOutside3 {\n    fill: ${options.taskTextOutsideColor};\n  }\n\n\n  /* Active task */\n\n  .active0,\n  .active1,\n  .active2,\n  .active3 {\n    fill: ${options.activeTaskBkgColor};\n    stroke: ${options.activeTaskBorderColor};\n  }\n\n  .activeText0,\n  .activeText1,\n  .activeText2,\n  .activeText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n\n  /* Completed task */\n\n  .done0,\n  .done1,\n  .done2,\n  .done3 {\n    stroke: ${options.doneTaskBorderColor};\n    fill: ${options.doneTaskBkgColor};\n    stroke-width: 2;\n  }\n\n  .doneText0,\n  .doneText1,\n  .doneText2,\n  .doneText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n\n  /* Tasks on the critical line */\n\n  .crit0,\n  .crit1,\n  .crit2,\n  .crit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.critBkgColor};\n    stroke-width: 2;\n  }\n\n  .activeCrit0,\n  .activeCrit1,\n  .activeCrit2,\n  .activeCrit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.activeTaskBkgColor};\n    stroke-width: 2;\n  }\n\n  .doneCrit0,\n  .doneCrit1,\n  .doneCrit2,\n  .doneCrit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.doneTaskBkgColor};\n    stroke-width: 2;\n    cursor: pointer;\n    shape-rendering: crispEdges;\n  }\n\n  .milestone {\n    transform: rotate(45deg) scale(0.8,0.8);\n  }\n\n  .milestoneText {\n    font-style: italic;\n  }\n  .doneCritText0,\n  .doneCritText1,\n  .doneCritText2,\n  .doneCritText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n  .activeCritText0,\n  .activeCritText1,\n  .activeCritText2,\n  .activeCritText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n  .titleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor}    ;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n`;\n\nexport default getStyles;\n"],"names":["o","parser","$","lexer","lastTask","lastTaskID","dateFormat","axisFormat","tickInterval","todayMarker","includes","excludes","links","sections","tasks","currentSection","tags","funs","inclusiveEndDates","topAxis","lastOrder","isInvalidDate","date","format","trim","isoWeekday","toLowerCase","checkTaskDates","task","length","manualEndTime","startTime","add","endTime","renderEndTime","fixTaskDates","toDate","invalid","getStartDate","prevTime","str","afterStatement","exec","latestEndingTask","split","forEach","id","findTaskById","dt","Date","setHours","mDate","isValid","l","d","isNaN","getTime","Error","parseDuration","statement","Number","parseFloat","getEndDate","inclusive","duration","taskCnt","parseId","idStr","rawTasks","taskDb","pos","compileTasks","compileTask","raw","type","prevTask","prevTaskId","startData","data","processed","allProcessed","entries","i","rawTask","setClass","ids","className","classes","push","pushFun","callbackFunction","elem","document","querySelector","addEventListener","getTaskTags","matchFound","t","regex","RegExp","match","shift","w","diagram","db","parseDirective","context","m","this","getConfig","configApi.getConfig","gantt","clear","commonClear","setDateFormat","txt","getDateFormat","enableInclusiveEndDates","endDatesAreInclusive","enableTopAxis","topAxisEnabled","setAxisFormat","getAxisFormat","setTickInterval","getTickInterval","setTodayMarker","getTodayMarker","setAccTitle","s","getAccTitle","g","setDiagramTitle","getDiagramTitle","setAccDescription","getAccDescription","addSection","getSections","getTasks","allItemsPricessed","iterationCount","addTask","descr","section","taskInfo","dataStr","substr","parseData","active","done","crit","milestone","order","addTaskOrg","newTask","description","endTimeData","compileData","setIncludes","getIncludes","setExcludes","getExcludes","setClickEvent","functionName","functionArgs","securityLevel","argList","item","charAt","u","setClickFun","setLink","_linkStr","linkStr","window","open","getLinks","bindFunctions","element","fun","renderer","setConf","draw","text","version","diagObj","sandboxElement","conf","root","nodes","contentDocument","body","doc","getElementById","parentElement","offsetWidth","useWidth","taskArray","h","barHeight","barGap","topPadding","setAttribute","svg","select","timeScale","domain","rangeRound","leftPadding","rightPadding","categories","catsUnfiltered","getCount","word","arr","obj","getCounts","hash","result","Object","prototype","hasOwnProperty","call","checkUnique","sort","a","b","taskA","taskB","pageWidth","pageHeight","gap","range","interpolate","theGap","theTopPad","theSidePad","minTime","reduce","min","Math","maxTime","max","excludeRanges","valueOf","end","clone","start","append","selectAll","enter","attr","gridLineStartPadding","renderEnd","toString","drawExcludeDays","bottomXAxis","tickSize","tickFormat","resultTickInterval","every","ticks","style","topXAxis","makeGrid","theArray","theBarHeight","theColorScale","category","numberSectionStyles","rectangles","res","classStr","join","secNum","taskClass","fontSize","startX","endX","textWidth","getBBox","width","taskType","filter","each","taskRect","taskText","oldParent","parentNode","Link","createElement","appendChild","drawRects","colorScale","numOccurances","prevGap","rows","dy","svgLabel","createElementNS","j","row","tspan","textContent","sectionFontSize","vertLabels","todayG","today","todayLine","titleTopMargin","replace","drawToday","makeGant","c","useMaxWidth","styles","options","excludeBkgColor","sectionBkgColor","sectionBkgColor2","altSectionBkgColor","titleColor","ganttFontSize","gridColor","fontFamily","textColor","todayLineColor","taskTextDarkColor","taskTextClickableColor","taskTextColor","taskBkgColor","taskBorderColor","taskTextOutsideColor","activeTaskBkgColor","activeTaskBorderColor","doneTaskBorderColor","doneTaskBkgColor","critBorderColor","critBkgColor"],"sourceRoot":""}